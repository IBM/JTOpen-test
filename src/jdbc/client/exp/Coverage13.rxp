>>!PRINTSTACKTRACE false
>-- Testcase to test the coverage of the built in JDBC client
>-- Testcase reflection tests
>
>-- Call method that returns an input stream
>!SETVAR BYTEARRAY GEN_BYTE_ARRAY+100
BYTEARRAY=[B@.*
>-- Call method using a variable as a parameter
>!SETNEWVAR BAIS=java.io.ByteArrayInputStream(BYTEARRAY)
BAIS=java.io.ByteArrayInputStream@.*
>
>!SETNEWVAR S1=java.lang.String(my:test:string)
S1=my:test:string
>-- Call method that returns an array
>!CALLMETHOD S1.split(':',20)
Call returned [Ljava.lang.String;@.*
  .. Array of size 3
[0][java.lang.String]=my
[1][java.lang.String]=test
[2][java.lang.String]=string
>!CALLMETHOD S1.toCharArray()
Call returned [C@.*
  .. Array of size 14
[0][java.lang.Character]=m
[1][java.lang.Character]=y
[2][java.lang.Character]=:
[3][java.lang.Character]=t
[4][java.lang.Character]=e
[5][java.lang.Character]=s
[6][java.lang.Character]=t
[7][java.lang.Character]=:
[8][java.lang.Character]=s
[9][java.lang.Character]=t
[10][java.lang.Character]=r
[11][java.lang.Character]=i
[12][java.lang.Character]=n
[13][java.lang.Character]=g
>
>
>-- Call method using a null parameter
>!CALLMETHOD S1.equals(null)
Call returned false
>
>-- Failure here
>
>-- Call a method with a boolean true
>!CALLMETHOD S1.regionMatches(true,0,MY,0,2)
Call returned true
>
>-- call a method with a boolean false
>!CALLMETHOD S1.regionMatches(false,0,MY,0,2)
Call returned false
>
>-- call a method with a short
>!CALLMETHOD java.lang.Short.toString(2)
Call returned 2
>
>-- call a method with a int
>!CALLMETHOD java.lang.Integer.toString(2)
Call returned 2
>
>-- call a method with a long
>!CALLMETHOD java.lang.Long.toString(2)
Call returned 2
>
>-- call a method with a float
>!CALLMETHOD java.lang.Float.toString(3.14)
Call returned 3.14
>
>-- call a method with a double
>!CALLMETHOD java.lang.Double.toString(3.14)
Call returned 3.14
>
>-- call a method with a string
>!callmethod java.lang.Short.parseShort(7)
Call returned 7
>
>-- call a method with a string array [ a + b + c]
>
>
>-- call a method with an integer array
>!callmethod java.util.Arrays.sort([1+2+3])
Call returned null
>
>
>-- try calling a method that is not visible
>!SETVAR STMT1=CON.createStatement()
STMT1=STMT0001
>!CALLMETHOD STMT1.checkOpen()
No matching method found, possible errors are the following:
ERROR:  Method not found checkOpen

Call returned null
>
>-- error situations
>-- No .
>!CALLMETHOD STMT1
No matching method found, possible errors are the following:
ERROR:  could find ( in STMT1
Call returned null
>!CALLMETHOD STMT1.
No matching method found, possible errors are the following:
ERROR:  could find ( in STMT1.
Call returned null
>-- not (
>!CALLMETHOD STMT1.exec
No matching method found, possible errors are the following:
ERROR:  could find ( in STMT1.exec
Call returned null
>-- method not found
>!CALLMETHOD STMT1.exec()
No matching method found, possible errors are the following:
ERROR:  Method not found exec

Call returned null
>-- not )
>!CALLMETHOD STMT1.exec(
No matching method found, possible errors are the following:
ERROR:  Method not found exec

Call returned null
>-- empty ,
>!CALLMETHOD STMT1.exec(,)
No matching method found, possible errors are the following:
ERROR:  Method not found exec

Call returned null
>
>
>-- Call new method with null
>
>-- Call new method with int
>!setnewvar I1=java.lang.Integer(1)
I1=1
>-- Call new method with boolean
>!setnewvar B1=java.lang.Boolean(true)
B1=true
>!setnewvar B1=java.lang.Boolean(false)
B1=false
>-- Call new method with long
>!setnewvar L1=java.lang.Long(100)
L1=100
>-- Call new method with String array
>
>-- call new method with int array
>
>-- show varmethods with object with a void method
>!setnewvar bitset=java.util.BitSet()
bitset={}
>!showvarmethods bitset
void and(java.util.BitSet)
void andNot(java.util.BitSet)
int cardinality()
void clear()
void clear(int)
void clear(int,int)
java.lang.Object clone()
boolean equals(java.lang.Object)
void flip(int)
void flip(int,int)
boolean get(int)
java.util.BitSet get(int,int)
java.lang.Class getClass()
int hashCode()
boolean intersects(java.util.BitSet)
boolean isEmpty()
int length()
int nextClearBit(int)
int nextSetBit(int)
void notify()
void notifyAll()
void or(java.util.BitSet)
IGNORE_EXTRA:int previousClearBit(int)
IGNORE_EXTRA:int previousSetBit(int)
void set(int)
void set(int,boolean)
void set(int,int)
void set(int,int,boolean)
int size()
IGNORE_EXTRA:java.util.stream.IntStream stream()
IGNORE_EXTRA:[B toByteArray()
IGNORE_EXTRA:[J toLongArray()
java.lang.String toString()
IGNORE_EXTRA:java.util.BitSet valueOf([B)
IGNORE_EXTRA:java.util.BitSet valueOf([J)
IGNORE_EXTRA:java.util.BitSet valueOf(java.nio.ByteBuffer)
IGNORE_EXTRA:java.util.BitSet valueOf(java.nio.LongBuffer)
void wait()
void wait(long)
void wait(long,int)
void xor(java.util.BitSet)
>
>
>
>
