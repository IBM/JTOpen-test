///////////////////////////////////////////////////////////////////////////////
//
// JTOpen (IBM Toolbox for Java - OSS version)
//
// Filename:  IFSGenericTestcase.java
//
// The source code contained herein is licensed under the IBM Public License
// Version 1.0, which has been approved by the Open Source Initiative.
// Copyright (C) 1997-2023 International Business Machines Corporation and
// others.  All rights reserved.
//
///////////////////////////////////////////////////////////////////////////////

package test.IFS;

import java.io.DataInput;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Hashtable;
import java.util.Vector;

import com.ibm.as400.access.AS400;
import com.ibm.as400.access.AS400JDBCDriver;
import com.ibm.as400.access.IFSFile;
import com.ibm.as400.access.IFSFileOutputStream;
import com.ibm.as400.access.IFSRandomAccessFile;

import jcifs.smb.SmbException;
import test.IFSTests;
import test.JCIFSUtility;
import test.JTOpenTestEnvironment;
import test.Testcase;

public class IFSGenericTestcase extends Testcase
{
  /* public static final String FILE_SEPARATOR = System.getProperty("file.separator"); */
  /* public static final char FILE_SEPARATOR_CHAR = FILE_SEPARATOR.charAt(0); */

  public static String ifsDirName_ = "/";
  public static String ifsDirPath_ = "/" + ifsDirName_;

  public static String ifsFileName_ = "TestFile";
  public static String ifsFilePath_ = ifsDirPath_ + '/' + ifsFileName_; 
  public static String fileName_ = "File";
  public static String ifsPathName_ = ifsDirName_ + fileName_;
  
  public String dirName_=null;
  public String collection_ = "JDIFSCOL"; 

  public boolean DOS_ = false;
  public boolean OS2_ = false;
  public boolean linux_ = false ;
  public boolean NT_ = false;
  public boolean OS400_ = false;
  public boolean UNIX_ = false;
  public boolean AIX_ = false;
  protected String savefileBase64 = 
      

      
  "rOB9jOkjEAEAAAA4MAAwANTIxED58ff5QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAABFAAAAEAAA"+
  "AAAAAAAAOA/4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAABjIDecPFa7tmKszsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAACrOB9jOkjEAEAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrOB9jOkjEAEAAGAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAErOB9jOkjEAEA"+
  "AIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAFrOB9jOkjEAEAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAGrOB9jOkjEAEAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHrOB9jOkjEAEAAOAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIrOB9jOkj"+
  "EAEAAQAA/////9ji2cTi4tfDS/FAQEBAQEBAQEBAQEBAQEBAQEBAQBnbAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAKQAAAAFwAAAgADAUUARQAAABAAAAAAAAAAACAAAAAAAAEAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA02HEQNbC0cXD40DExeLD"+
  "2cnX49bZQEBAAAAAAAAAAAAAAAAAxMni0gAArOB9jOjlAAEAAAIAAAAAGAAAAAEAAAAQAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkoPPYRABAA5/GIrzYAEoAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAJ8Unph4eldnyq8O2sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAkoPPYRAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKrOB8jOljEBNQ+ywgAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALrOB9jOkjEAEAAWAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrOB9"+
  "jOkjEAEAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAANrOB9jOkjEAEAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOrOB9jOkjEAEAAcAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPrOB9jOkjEAEAAeAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ"+
  "rOB9jOkjEAEAAgAAAAEAEAPAAJAJKDz2EQAAAAABAAAAAAAACSg89hEAEACBABnb2OLZxOLi18NL"+
  "8UBAQEBAQEBAQEBAQEBAQEBAQEBAoAAAABAAAAAAEP8cAwGs4H2M2zhQARlKfxurAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAkoPPYRAAAAAAIAAAEAAACs4H2M3upAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAA/xwAAAEnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAABAQAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAScAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAARQs9Ytqw71k5vXw5gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASrOB9jOkjEAEAAkAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATrOB9jOkjEAEAAmAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAUrOB9jOkjEAEAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAVrOB9jOkjEAEAAqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWrOB9jOkjEAEAAsAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXrOB9jOkjEAEA"+
  "AuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAYrOB9jOkjEAEAAwAAAUjJxuLEwePBQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAEAazgfYzd"+
  "2OABAAAAAQAAAACBQEDx8MPxw8LjAABc4uji5cHTQEBAAAAAAdUADgBc4ujiwsHiQEBAAFzV1tXF"+
  "QEBAQEDk4/Pw1/H0QAAAAMHX6cPW5cXZQEBAQEBAQEBAQEBAQEBAQEBAQEBAQBkB2MTG49bm1UBA"+
  "QEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAOAAAAAVAAABoAAACpAAAAUAAAAAAAAAAAAAAAAAAABA"+
  "QEBAQEBAQEBAQEBAQEBAQEBAQAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAIgAAAAAAAAAAAAAAEQAAA"+
  "BgAAAAAB/5w4EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAwGgAAAQgAAEAAAAAANUA"+
  "AAAAAAAAAFzF58PT5MTFQEAAAAAZOBVVCqzgzl8z8EvPAAAAAB4AAAADSQAAAAAAAAAAADwBAAEA"+
  "QAAAABDx8vXw8fD28Pnx8/P4ABXX48ZAw5alhZlA04Wjo4WZQMaJk4VAQEBAQEBAQEBAQEBAQEBA"+
  "QEBAQEBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADE"+
  "1QAAAAQgAAAAvAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAQMXV5OTiAAAAJQAAAAABAAAA"+
  "AAAAAAAzg8E/3AANEAAAAAAAAAAAFiSR5KYADRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAADwAAAAA+AAAAAAAAAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAAAADYAAAAAAA"+
  "AAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "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"+
  "C5DB1+nD1uXF2UBA2OLR8PPw+fZAQEBAQEBAQEBAQEALkMHX6cPW5cXZQEDY4tHw8/Hz9kBAQEBA"+
  "QEBAQEBAQAuQAAAAFdfjxkDDlqWFmUDThaOjhZlAxomThQAAAKhAQEBAQEBAQEBAQEBAQEBAQEBA"+
  "QEDxQEBAQEBAQEBAQEBAQEBAQEBAQEBA5ffZ89Tw8fL18PHw9vD58fPz+EBAQEBAQEBAQEBAQEBA"+
  "QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAAAAAAAAAAAAAAAAAAAAASxcLF2cjB2cRAQOTj8/DX8fRA"+
  "AAAAAAAAABTXxkBAQEBAQEBA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAey61/RisY1sARxHFYAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfrOB9"+
  "jOkjEAEAA+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAgrOB9jOkjEAEABAAA/////8HX6cPW5cXZQEDY4tHw8/Dz9UBAQEBAQEBAQEBA"+
  "QAuQAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALwAAAABgAAAgBdEEUARQAAAAAA"+
  "AAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAA"+
  "AAAA02HEQNbC0cXD40DExeLD2cnX49bZQEBAAAAAAAAAAAAAAAAAxMni0gAErOB9jOjlAAEAAAIA"+
  "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"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAud+t/ENZQ"+
  "0PCyEdZQ/////8HX6cPW5cXZQEDY4tHw8/Hz9kBAQEBAQEBAQEBAQAuQAAAAcAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAALwAAAACQAAAgBdEEUARQAAAAAAAAAAAAAAAAAAAAAAAAIAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAA02HEQNbC0cXD40DExeLD"+
  "2cnX49bZQEBAAAAAAAAAAAAAAAAAxMni0gAErOB9jOjlAAEAAAIAAAAAMAAAAAQAAAAoAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAgAAD/AAAAwocLw5EAEoAAAAAAAAAA"+
  "AAAAAAAAAAAAwocLw5EAEqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADChwvDkQAS4AAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR8gAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
  "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";

  public static boolean DEBUG = false;



  static {
      if (System.getProperty("debug") != null) {
	  DEBUG = true; 
      }
      if (System.getProperty("DEBUG") != null) {
	  DEBUG = true; 
      } 

  } 


/**
Constructor.
**/
  public IFSGenericTestcase (AS400 systemObject,
                   String userid, 
                   String password,
                   String testname, 
                   Hashtable<String, Vector<String>> namesAndVars,
                   int runMode,
                   FileOutputStream fileOutputStream,
                   AS400    pwrSys
                   )
    {
        super(systemObject,testname,namesAndVars,runMode,fileOutputStream,password);
        userId_=userid;
	pwrSys_ = pwrSys; 
	if (systemName_ == null) {
	  systemName_ = systemObject.getSystemName(); 
	}

    }


  
  /**
  @exception  Exception  If an exception occurs.
  **/
 protected void setup()
   throws Exception
 {

   lockSystem("IFSFILE",600); 
   collection_ = IFSTests.COLLECTION;



   // Determine operating system we're running under
     DOS_ = JTOpenTestEnvironment.isWindows; 

     
   if (JTOpenTestEnvironment.isOS400) {
      OS400_ = true;
   }  else    {                                     
      OS400_ = false;
   }

      if (JTOpenTestEnvironment.isAIX   ||
          JTOpenTestEnvironment.isLinux)
        UNIX_ = true;



   output_.println("Running under: " + JTOpenTestEnvironment.osVersion);
   output_.println("DOS-based file structure: " + DOS_);
   output_.println("Linux Flag: " + JTOpenTestEnvironment.isLinux);
   output_.println("AIX Flag:   " + JTOpenTestEnvironment.isAIX); 

  
   ifsDirName_ = IFSFile.separator + "IFSTEST."+ System.getProperty("user.name") + IFSFile.separator ;
   {
   IFSFile file = new IFSFile(systemObject_, ifsDirName_);
   if (! file.exists()) {
     file.mkdir(); 
   }
   }
   
   String someOtherFilename = ifsDirName_ + "someOtherFile"; 
   {
     IFSFile file = new IFSFile(systemObject_, someOtherFilename); 
     if (! file.exists()) {
       file.createNewFile(); 
     }
   }
   fileName_ = "File"+collection_; 
   ifsPathName_ = ifsDirName_ + fileName_;
   dirName_ =  IFSFile.separator; 

  ifsFileName_ = "TestFile"+collection_;
  ifsDirPath_ = IFSFile.separator + ifsFileName_; 





   // Check to see if we're connected properly
   try
   {
       IFSFile file = new IFSFile(systemObject_, IFSFile.separator, "QSYS.LIB");
       if (!file.exists())
       {
         output_.println("Unable to locate QSYS.LIB in " + IFSFile.separator + " on " + systemObject_.getSystemName() + ".");
         throw new Exception("Unable to locate QSYS.LIB");
       }
   }
   catch(Exception e)
   {
     e.printStackTrace(output_);
     throw e;
   }
 }



protected void cleanup() throws Exception { 
  unlockSystem(); 
}




  public final void createDirectory(String dirName)
  {
     createDirectory(systemObject_, dirName);
  }
  
  public final void createDirectory(AS400 system, String dirName)
  {
    try
    {
        IFSFile dir = new IFSFile(system, dirName);
        if (!dir.exists())
        {
          dir.mkdirs();
        }
    }
    catch(Exception e)
    {
      if (DEBUG)
        e.printStackTrace(output_);
    }
  }

  public final void createFile(String pathName)
  {
    try
    {
      if ( IFSTests.IsRunningOnOS400)
      {
        IFSFile file = new IFSFile(systemObject_, pathName);
        if (file.exists())
        {
          file.delete();
        }
        IFSRandomAccessFile raf =
          new IFSRandomAccessFile(systemObject_, pathName, "rw");
        raf.close();
      }
      else
      {
        // Just use JCIFS to write the file 
        /* 
	      File file = new File(convertToPCName(pathName));
	      if (file.exists())
	      {
		  file.delete();
	      }
	      RandomAccessFile raf = new RandomAccessFile(file, "rw");
	      raf.close();
          */
           try { 
	      JCIFSUtility.createFile(systemObject_.getSystemName(),
				      userId_,
				      encryptedPassword_,
				      pathName);
              IFSFile file = new IFSFile(systemObject_, pathName);
              if (!file.exists())  {
                throw new Exception("JDCIFSUtility.createFile did not create "+pathName);
              }
           } catch (Exception e) {
             String message = e.toString();
             // If hitting weird access denied error.  Just use IFSRAF to create it. 
             if (message.indexOf("Access is denied")>= 0) {
               IFSFile file = new IFSFile(systemObject_, pathName);
               if (file.exists())
               {
                 file.delete();
               }
               IFSRandomAccessFile raf =
                 new IFSRandomAccessFile(systemObject_, pathName, "rw");
               raf.close();

               file = new IFSFile(systemObject_, pathName);
               if (!file.exists())  {
                 throw new Exception("IFSRandomAccessFile did not create "+pathName);
               }

               
             } else {
               throw e; 
             }
           }
	   
      }
    }
    catch(Exception e)
    {
      e.printStackTrace();
    }
  }

/**
Create a file to be used for the testcases.
**/
  public void createFileInDirectory(String directory, String file)
  {
     try
     {
        IFSFile aDirectory = new IFSFile(systemObject_, directory);
        // create the directory
        if (aDirectory.mkdir())
        {
           IFSFile aFile = new IFSFile(systemObject_, file);
           aFile.createNewFile(); 
          
        }
        else     // Else the create directory failed.
        {
           if (aDirectory.exists())
           {
              if (aDirectory.isDirectory())
              {
                 // create the file.
                 IFSFile aFile = new IFSFile(systemObject_, file);
                 aFile.createNewFile(); 
              }
           }
           else
              System.out.println("Setup - create file - failed");
        }
     }
     catch(Exception e)
     {
        System.out.println(e);
     }
  }

  public final void createFile(String pathName, String data)
  {
    try
    {
      if ( IFSTests.IsRunningOnOS400)
      {
        IFSFile file = new IFSFile(systemObject_, pathName);
        if (file.exists())
        {
          file.delete();
        }
        IFSRandomAccessFile raf =
          new IFSRandomAccessFile(systemObject_, pathName, "rw");
        raf.writeChars(data);
        raf.close();
      }
      else
      {

        // Just use JCIFS to write to the file 
        
        JCIFSUtility.createFile(systemObject_.getSystemName(),
                                userId_,
                                encryptedPassword_,
                                pathName, 
                                data); 

        
        /* 
        File file = new File(convertToPCName(pathName));
        if (file.exists())
        {
          file.delete();
        }
        RandomAccessFile raf = new RandomAccessFile(file, "rw");
        raf.writeChars(data);
        raf.close();
        */ 
      }
    }
    catch(Exception e)
    {
      e.printStackTrace();
    }
  }

  public void createFileWriteChars(String pathName, String data)
  {
    try
    {
      {
        IFSFile file = new IFSFile(systemObject_, pathName);
        if (file.exists())
        {
          file.delete();
        }
        IFSRandomAccessFile raf =
          new IFSRandomAccessFile(systemObject_, pathName, "rw");
        raf.writeChars(data);
        raf.close();
      }
    }
    catch(Exception e)
    { e.printStackTrace(); }
  }


  public final void createFile(String pathName, byte[] data)
  {
    try
    {
      if ( IFSTests.IsRunningOnOS400)
      {
        IFSFile file = new IFSFile(systemObject_, pathName);
        if (file.exists())
        {
          file.delete();
        }
        IFSRandomAccessFile raf =
          new IFSRandomAccessFile(systemObject_, pathName, "rw");
        raf.write(data);
        raf.close();
      }
      else
      {
        // Just use JCIFS to write to the file 
        
        JCIFSUtility.createFile(systemObject_.getSystemName(),
                                userId_,
                                encryptedPassword_,
                                pathName, 
                                data); 

        /* 
        File file = new File(convertToPCName(pathName));
        if (file.exists())
        {
          file.delete();
        }
        RandomAccessFile raf = new RandomAccessFile(file, "rw");
        raf.write(data);
        raf.close();
        */ 
      }
    }
    catch(Exception e)
    {
      e.printStackTrace();
    }
  }

  public final void deleteFile(String pathName) {
    try { 
      deleteFileStatus(pathName); 
    } catch (Exception e) { 
      
    }
  }
  public final boolean deleteFileStatus(String pathName) throws IOException
  {
        IFSFile file = new IFSFile(systemObject_, pathName);
        if (file.exists())        {
          boolean deleted = file.delete();
          return deleted; 
        }
        return false; 
  }
  
  public void createIFSDirectory(String dirName)
  {
    try
    {
      IFSFile dir = new IFSFile(systemObject_, dirName);
      if (!dir.exists())
      {
        dir.mkdir();
      }
    }
    catch(Exception e)
    {}
  }



  public final void createIFSFile(String pathName)
  {
    try
    {
      IFSFile file = new IFSFile(systemObject_, pathName);
      if (file.exists())
      {
        file.delete();
      }
      IFSRandomAccessFile raf =
        new IFSRandomAccessFile(systemObject_, pathName, "rw");
      raf.close();
    }
    catch(Exception e)
    {
      System.out.println("Exception in createFile: <" + e.getMessage() + ">");
    }
  }

  public final void createIFSFile(AS400 as400, String pathName)
  {
    try
    {
      IFSFile file = new IFSFile(as400, pathName.replace(File.separatorChar, IFSFile.separatorChar));
      if (file.exists())
      {
        file.delete();
      }
      IFSRandomAccessFile raf =
        new IFSRandomAccessFile(as400, pathName.replace(File.separatorChar, IFSFile.separatorChar), "rw");
        int i = 0;
        for (; i < 256; i++)
        {
          raf.write ((byte)i);
        }

      raf.close();
    }
    catch(Exception e)
    {
      System.out.println("Exception in createFile: <" + e.getMessage() + ">");
      e.printStackTrace(); 
    }
  }





  public String[] listDirectory(String pathName) throws Exception {

    if ( IFSTests.IsRunningOnOS400 ) { 
     File file2 = new File(pathName);
     String[] names2 = file2.list();
     return names2; 

    } else { 
      return JCIFSUtility.listDirectory(systemObject_.getSystemName(),
          userId_,
          encryptedPassword_,
          pathName); 
    }
  }

  public String[] listQSYSDirectory(String pathName) throws Exception {

    if ( IFSTests.IsRunningOnOS400 ) { 
     File file2 = new File(pathName);
     String[] names2 = file2.list();
     return names2; 

    } else { 
      String[] sampleStringArray = new String[0]; 
      Vector<String> answer = new Vector<String>();
      Connection c = new AS400JDBCDriver().connect(pwrSys_);
      Statement s = c.createStatement(); 
      String sql="SELECT SUBSTRING(PATH_NAME,LENGTH('"+pathName+"')+2) FROM "
          + "TABLE(QSYS2.IFS_OBJECT_STATISTICS('"+pathName+"','NO'))";
      ResultSet rs = s.executeQuery(sql); 
      while (rs.next()) { 
        String string = rs.getString(1); 
        if (string != null && string.length() > 0) { 
          answer.add(string); 
        }
      }
      String[] names2 = answer.toArray(sampleStringArray); 
      c.close(); 
      return names2; 
    }
  }

  
  public final void deleteDirectory(String pathName) 
  {
              deleteFile(pathName);
  }


  public final boolean deleteDirectoryStatus(String pathName) throws IOException {
    if (DEBUG)
      output_.print("Deleting directory tree starting at: " + pathName + "...");
    if (pathName.indexOf('\\') >= 0) {
      pathName = pathName.replace('\\', '/');
    }
    deleteFileStatus(pathName);
    IFSFile stillThere = new IFSFile(systemObject_, pathName);
    if (stillThere.exists()) {
      output_.print("Unable to cleanup.\n");
      return false;
    } else {
      if (DEBUG)
        output_.print("OK.\n");
      return true;
    }
  }

  
  public final void deleteIFSDirectory(String pathName) { 
    IFSFile file = new IFSFile(systemObject_, pathName);
    deleteIFSDirectory(file); 
  }

  public final void deleteIFSDirectory(IFSFile dir)
  {
    if (dir == null) return;
    try
    {
      IFSFile dirContents[] = dir.listFiles();
      for (int i=0; i<dirContents.length; i++) {
        deleteIFSFile(dirContents[i]);
      }
      dir.delete();
    }
    catch(Exception e)
    {e.printStackTrace();}
  }

  public final void deleteIFSFile(IFSFile file)
  {
    try
    {
      if (file.isDirectory()) deleteIFSDirectory(file);
      else if (file.exists())
      {
        file.delete();
      }
    }
    catch(Exception e)
    {
 System.out.println("Exception in createFile: <" + e.getMessage() + ">");
e.printStackTrace();
}
  }

  public final void deleteIFSFile(String pathName)
  {
    try
    {
      IFSFile file = new IFSFile(systemObject_, pathName);
      if (file.exists())
      {
        file.delete();
      }
    }
    catch(Exception e)
    {e.printStackTrace();}
  }



  public InputStream getNonIFSInputStream(String ifsPathName) throws FileNotFoundException, SmbException, MalformedURLException, UnknownHostException, SQLException {
      InputStream fis = null; 
      if (IFSTests.IsRunningOnOS400) {
	  fis = new FileInputStream(ifsPathName); 
      } else {

          fis = JCIFSUtility.getFileInputStream(systemObject_.getSystemName(),
                                userId_,
                                encryptedPassword_,
                                ifsPathName);

      } 

      return fis;

  }



  public void checkReadWriteAccess(String ifsPathNameX) throws Exception {
      {
          InputStream is2 = JCIFSUtility.getFileInputStream(systemName_, userId_, encryptedPassword_, ifsPathNameX); 

          JCIFSUtility.createFile(systemName_, userId_, encryptedPassword_, ifsPathNameX); 
          is2.close();
          
      }
  }



  public void checkReadAccess(String ifsPathNameX) throws Exception { 
      {
        
          InputStream is2 = JCIFSUtility.getFileInputStream(systemName_, userId_, encryptedPassword_, ifsPathNameX); 
          is2.close();
      }
  }



  public void checkWriteAccess(String ifsPathNameX) throws Exception { 
      // if (isApplet_ || NT_ || linux_)
      // {
          IFSFileOutputStream os =
            new IFSFileOutputStream(systemObject_, ifsPathNameX);
          os.close();
      // }
      // else
      //{
          // FileOutputStream os = new FileOutputStream(convertToPCName(ifsPathNameX));
      //    OutputStream os = JCIFSUtility.getFileOutputStream(systemName_, userId_, password_, ifsPathNameX); 
      //    os.close();
      // }
  }



  public boolean checkFileExists(String ifsPathNameX) throws Exception { 
      if ( JTOpenTestEnvironment.isLinux)
      {
  	IFSFile file = new IFSFile(systemObject_, ifsPathNameX);
  	return (file.exists());
      }
      else
      {
        boolean exists = JCIFSUtility.fileExists(systemName_, userId_, encryptedPassword_, ifsPathNameX);
        return exists; 
  	// File file = new File(convertToPCName(ifsPathNameX));
  	// return (file.exists());
      }
  }



  public long checkFileLength(String ifsPathNameX) throws Exception { 
      if ( JTOpenTestEnvironment.isLinux)
      {
  	IFSFile file = new IFSFile(systemObject_, ifsPathNameX);
  	return (file.length());
      }
      else
      {
        return JCIFSUtility.fileLength(systemName_, userId_, encryptedPassword_, ifsPathNameX);   
  	// File file = new File(convertToPCName(ifsPathNameX));
  	// return (file.length());
      }
  }

  public boolean checkExpectedRead2(String ifsPathNameX, int x1, int x2) throws Exception  {  
    boolean passed = false; 
    {
      passed = JCIFSUtility.checkExpectedRead2(systemName_, userId_, encryptedPassword_, ifsPathNameX, x1, x2); 
      // FileInputStream is = new FileInputStream(convertToPCName(ifsPathNameX));
      // passed = (is.read() == x1 && is.read() == x2);
      // is.close();
    }
    return passed; 
    }

  public DataInput openDataInput(String ifsPathNameX, String mode) throws Exception  {  
    return JCIFSUtility.openDataInput(systemName_, userId_, encryptedPassword_, ifsPathNameX, mode); 
    }

//  public DataOutput openDataOutput(String ifsPathNameX, String mode) throws Exception  {  
//    return JCIFSUtility.openDataOutput(systemName_, userId_, encryptedPassword_, ifsPathNameX, mode); 
//     }
  
  
}





