///////////////////////////////////////////////////////////////////////////////
//
// JTOpen (IBM Toolbox for Java - OSS version)
//
// Filename:  ConvTableBidiBytesTestcase.java
//
// The source code contained herein is licensed under the IBM Public License
// Version 1.0, which has been approved by the Open Source Initiative.
// Copyright (C) 1997-2023 International Business Machines Corporation and
// others.  All rights reserved.
//
///////////////////////////////////////////////////////////////////////////////

package test.Conv;

import test.ConvTest;
import test.NLSTableDownload;
import test.Testcase;
import com.ibm.as400.access.*; 

/**
 Testcase ConvTableBidiBytesTestcase.
 Test internal converter table contents for all ConvTableBidiMap converter tables.
 **/
public class ConvTableBidiBytesTestcase extends Testcase
{
  public static void main(String args[]) throws Exception {
    String[] newArgs = new String[args.length+2];
     newArgs[0] = "-tc";
     newArgs[1] = "ConvTableBidiBytesTestcase";
     for (int i = 0; i < args.length; i++) {
       newArgs[2+i]=args[i];
     }
     test.ConvTest.main(newArgs); 
   }
    boolean isProxified_ = false;

    /**
     Runs the variations requested.
     Loops through all of the Bidi CCSIDs the Toolbox supports and tests their contents
     against the same tables downloaded from the server.
     Variations should be successful.
     **/
    public void run()
    {
        totalVariations_ = ConvTest.bidiCcsids_.length;

        try
        {
            setup();
        }
        catch (Exception e)
        {
            System.out.println("Testcase setup error: " + e.getMessage());
            e.printStackTrace(System.out);
            if (endIfSetupFails_ == true)
            {
                return;
            }
        }

        boolean allVariations = (variationsToRun_.size() == 0);

        if (runMode_ != ATTENDED)
        {
            for (int i = 1; i <= ConvTest.bidiCcsids_.length; ++i)
            {
                if (allVariations || variationsToRun_.contains("" + i))
                {
                    setVariation(i);
                    if (isProxified_)
                    {
                        notApplicable("Running proxified.");
                    }
                    else
                    {
                        try
                        {
                            // Class c = Class.forName("com.ibm.as400.access.ConvTable" + ConvTest.bidiCcsids_[i - 1]);
                            // ConvTableBidiMap m = (ConvTableBidiMap)c.newInstance();
                            ConvTableBidiMap m = (ConvTableBidiMap)ConvTable.getTable(
                                ConvTest.bidiCcsids_[i - 1], (AS400ImplRemote) systemObject_.getImpl()); 

                            compareTables(m);
                        }
                        catch (Exception e)
                        {
                            failed(e, "Unexpected exception for Bidi CCSID " + ConvTest.bidiCcsids_[i - 1] + ".");
                        }
                    }
                }
            }
        }
    }

    /**
     Connects to the server.
     **/
    protected void setup() throws Exception
    {
        try
        {
            systemObject_.connectService(AS400.CENTRAL);
            if (systemObject_.getProxyServer().length() > 0) isProxified_ = true;
        }
        catch (Exception e)
        {
            e.printStackTrace(output_);
        }
    }

    /**
     Helper method used to download the unicode converter table from the server.
     **/
    public char[] downloadBidiByteToUnicodeTable(int ccsid) throws Exception
    {
        AS400ImplRemote impl = (AS400ImplRemote)systemObject_.getImpl();

        NLSTableDownload down = new NLSTableDownload(impl);
        down.connect();

        char[] table;

        if (ccsid == 5351)
            table = down.download(1255, 13488, false);
        else
            table = down.download(ccsid, 13488, false);

        down.disconnect();

        return table;
    }

    /**
     Helper method used to download the ebcdic converter table from the server.
     **/
    public char[] downloadBidiByteFromUnicodeTable(int ccsid) throws Exception
    {
        AS400ImplRemote impl = (AS400ImplRemote)systemObject_.getImpl();

        NLSTableDownload down = new NLSTableDownload(impl);
        down.connect();

        char[] table;

        if (ccsid == 5351)
            table = down.download(13488, 1255, true);
        else
            table = down.download(13488, ccsid, true);

        down.disconnect();

        return table;
    }

    /**
     Helper method used to print an integer as a hex string.
     **/
    public static String hex(int x)
    {
        StringBuffer h = new StringBuffer(Integer.toHexString(x).toUpperCase());
        while (h.length() < 4) h.insert(0, '0');
        h.insert(0, "0x");
        return h.toString();
    }

    char[] known420Misses =
    {
        0x060C,0x0079,0x003F,
        0x061B,0x00C0,0x003F,
        0x061F,0x00D0,0x003F,
        0x0621,0x0046,0x003F,
        0x0622,0x0047,0x003F,
        0x0623,0x0049,0x003F,
        0x0624,0x0052,0x003F,
        0x0625,0x0056,0x003F,
        0x0626,0x0055,0x003F,
        0x0627,0x0056,0x003F,
        0x0628,0x0058,0x003F,
        0x0629,0x0062,0x003F,
        0x062A,0x0063,0x003F,
        0x062B,0x0065,0x003F,
        0x062C,0x0067,0x003F,
        0x062D,0x0069,0x003F,
        0x062E,0x0071,0x003F,
        0x062F,0x0073,0x003F,
        0x0630,0x0074,0x003F,
        0x0631,0x0075,0x003F,
        0x0632,0x0076,0x003F,
        0x0633,0x0077,0x003F,
        0x0634,0x0080,0x003F,
        0x0635,0x008B,0x003F,
        0x0636,0x008D,0x003F,
        0x0637,0x008F,0x003F,
        0x0638,0x0090,0x003F,
        0x0639,0x009A,0x003F,
        0x063A,0x009E,0x003F,
        0x0640,0x0044,0x003F,
        0x0641,0x00AB,0x003F,
        0x0642,0x00AD,0x003F,
        0x0643,0x00AF,0x003F,
        0x0644,0x00B1,0x003F,
        0x0645,0x00BB,0x003F,
        0x0646,0x00BD,0x003F,
        0x0647,0x00BF,0x003F,
        0x0648,0x00CF,0x003F,
        0x0649,0x00DA,0x003F,
        0x064A,0x00DC,0x003F,
        0x0651,0x0042,0x003F,
        0x0660,0x00DF,0x003F,
        0x0661,0x00EA,0x003F,
        0x0662,0x00EB,0x003F,
        0x0663,0x00ED,0x003F,
        0x0664,0x00EE,0x003F,
        0x0665,0x00EF,0x003F,
        0x0666,0x00FB,0x003F,
        0x0667,0x00FC,0x003F,
        0x0668,0x00FD,0x003F,
        0x0669,0x00FE,0x003F,
        0x066A,0x006C,0x003F,
        0x066B,0x006B,0x003F,
        0x066C,0x004B,0x003F,
        0x066D,0x005C,0x003F,
        0x0824,0x003F,0x005C,
        0x0825,0x003F,0x006B,
        0x0826,0x003F,0x004B,
        0x0827,0x003F,0x006C,
        0x0828,0x003F,0x00DF,
        0x0829,0x003F,0x00EA,
        0x082A,0x003F,0x00EB,
        0x082B,0x003F,0x00ED,
        0x082C,0x003F,0x00EE,
        0x082D,0x003F,0x00EF,
        0x082E,0x003F,0x00FB,
        0x082F,0x003F,0x00FC,
        0x0830,0x003F,0x00FD,
        0x0831,0x003F,0x00FE,
        0x0832,0x003F,0x00B8,
        0x0833,0x003F,0x00B8,
        0x0834,0x003F,0x00B4,
        0x0835,0x003F,0x00B2,
        0x0845,0x003F,0x0045,
        0x0847,0x003F,0x00DE,
        0x0848,0x003F,0x00DA,
        0x0849,0x003F,0x00CF,
        0x084A,0x003F,0x00CD,
        0x084B,0x003F,0x00BE,
        0x084C,0x003F,0x00BC,
        0x084D,0x003F,0x00BA,
        0x084E,0x003F,0x00B0,
        0x084F,0x003F,0x00AE,
        0x0850,0x003F,0x00AC,
        0x0851,0x003F,0x0044,
        0x0857,0x003F,0x009F,
        0x0858,0x003F,0x009D,
        0x0859,0x003F,0x0090,
        0x085A,0x003F,0x008F,
        0x085B,0x003F,0x008E,
        0x085C,0x003F,0x008C,
        0x085D,0x003F,0x008A,
        0x085E,0x003F,0x0078,
        0x085F,0x003F,0x0076,
        0x0860,0x003F,0x0075,
        0x0861,0x003F,0x0074,
        0x0862,0x003F,0x0073,
        0x0863,0x003F,0x0072,
        0x0864,0x003F,0x0070,
        0x0865,0x003F,0x0068,
        0x0866,0x003F,0x0066,
        0x0867,0x003F,0x0064,
        0x0868,0x003F,0x0062,
        0x0869,0x003F,0x0059,
        0x086A,0x003F,0x0057,
        0x086B,0x003F,0x0055,
        0x086C,0x003F,0x0056,
        0x086D,0x003F,0x0052,
        0x086E,0x003F,0x0049,
        0x086F,0x003F,0x0047,
        0x0870,0x003F,0x0046,
        0x0872,0x003F,0x00D0,
        0x0876,0x003F,0x00C0,
        0x0885,0x003F,0x0079,
        0xFB1E,0x003F,0x00F0,
        0xFB1F,0x003F,0x00F1,
        0xFB20,0x003F,0x00F2,
        0xFB21,0x003F,0x00F3,
        0xFB22,0x003F,0x00F4,
        0xFB23,0x003F,0x00F5,
        0xFB24,0x003F,0x00F6,
        0xFB25,0x003F,0x00F7,
        0xFB26,0x003F,0x00F8,
        0xFB27,0x003F,0x00F9,
        0xFB28,0x003F,0x0061,
        0xFB29,0x003F,0x004B,
        0xFB2A,0x003F,0x0060,
        0xFB2B,0x003F,0x006B,
        0xFB2C,0x003F,0x004E,
        0xFB2D,0x003F,0x005C,
        0xFB2E,0x003F,0x005D,
        0xFB2F,0x003F,0x004D,
        0xFB30,0x003F,0x007D,
        0xFB31,0x003F,0x0050,
        0xFB32,0x003F,0x006C,
        0xFB33,0x003F,0x005B,
        0xFB34,0x003F,0x007B,
        0xFB35,0x003F,0x007F,
        0xFB36,0x003F,0x005A,
        0xFB3B,0x003F,0x00B9,
        0xFB3C,0x003F,0x00B8,
        0xFB3D,0x003F,0x00B9,
        0xFB3E,0x003F,0x00B8,
        0xFB3F,0x003F,0x00B5,
        0xFB40,0x003F,0x00B4,
        0xFB41,0x003F,0x00B3,
        0xFB42,0x003F,0x00B2,
        0xFB43,0x003F,0x00DE,
        0xFB44,0x003F,0x00DE,
        0xFB45,0x003F,0x00DD,
        0xFB46,0x003F,0x00DC,
        0xFB47,0x003F,0x00DB,
        0xFB48,0x003F,0x00DA,
        0xFB49,0x003F,0x00CF,
        0xFB4A,0x003F,0x00CF,
        0xFB4B,0x003F,0x00CD,
        0xFB4C,0x003F,0x00CB,
        0xFB4D,0x003F,0x00BF,
        0xFB4E,0x003F,0x00BF,
        0xFB4F,0x003F,0x00BE,
        0xFB50,0x003F,0x00BE,
        0xFB51,0x003F,0x00BD,
        0xFB52,0x003F,0x00BD,
        0xFB53,0x003F,0x00BC,
        0xFB54,0x003F,0x00BC,
        0xFB55,0x003F,0x00BB,
        0xFB56,0x003F,0x00BB,
        0xFB57,0x003F,0x00BA,
        0xFB58,0x003F,0x00BA,
        0xFB59,0x003F,0x00B1,
        0xFB5A,0x003F,0x00B1,
        0xFB5B,0x003F,0x00B0,
        0xFB5C,0x003F,0x00B0,
        0xFB5D,0x003F,0x00AF,
        0xFB5E,0x003F,0x00AF,
        0xFB5F,0x003F,0x00AE,
        0xFB60,0x003F,0x00AE,
        0xFB61,0x003F,0x00AD,
        0xFB62,0x003F,0x00AD,
        0xFB63,0x003F,0x00AC,
        0xFB64,0x003F,0x00AC,
        0xFB65,0x003F,0x00AB,
        0xFB66,0x003F,0x00AB,
        0xFB67,0x003F,0x00AA,
        0xFB68,0x003F,0x00A0,
        0xFB69,0x003F,0x009F,
        0xFB6A,0x003F,0x009E,
        0xFB6B,0x003F,0x009D,
        0xFB6C,0x003F,0x009C,
        0xFB6D,0x003F,0x009B,
        0xFB6E,0x003F,0x009A,
        0xFB6F,0x003F,0x0090,
        0xFB70,0x003F,0x0090,
        0xFB71,0x003F,0x0090,
        0xFB72,0x003F,0x0090,
        0xFB73,0x003F,0x008F,
        0xFB74,0x003F,0x008F,
        0xFB75,0x003F,0x008F,
        0xFB76,0x003F,0x008F,
        0xFB77,0x003F,0x008E,
        0xFB78,0x003F,0x008E,
        0xFB79,0x003F,0x008D,
        0xFB7A,0x003F,0x008D,
        0xFB7B,0x003F,0x008C,
        0xFB7C,0x003F,0x008C,
        0xFB7D,0x003F,0x008B,
        0xFB7E,0x003F,0x008B,
        0xFB7F,0x003F,0x008A,
        0xFB80,0x003F,0x008A,
        0xFB81,0x003F,0x0080,
        0xFB82,0x003F,0x0080,
        0xFB83,0x003F,0x0078,
        0xFB84,0x003F,0x0078,
        0xFB85,0x003F,0x0077,
        0xFB86,0x003F,0x0077,
        0xFB87,0x003F,0x0076,
        0xFB88,0x003F,0x0076,
        0xFB89,0x003F,0x0075,
        0xFB8A,0x003F,0x0075,
        0xFB8B,0x003F,0x0074,
        0xFB8C,0x003F,0x0074,
        0xFB8D,0x003F,0x0073,
        0xFB8E,0x003F,0x0073,
        0xFB8F,0x003F,0x0072,
        0xFB90,0x003F,0x0072,
        0xFB91,0x003F,0x0071,
        0xFB92,0x003F,0x0071,
        0xFB93,0x003F,0x0070,
        0xFB94,0x003F,0x0070,
        0xFB95,0x003F,0x0069,
        0xFB96,0x003F,0x0069,
        0xFB97,0x003F,0x0068,
        0xFB98,0x003F,0x0068,
        0xFB99,0x003F,0x0067,
        0xFB9A,0x003F,0x0067,
        0xFB9B,0x003F,0x0066,
        0xFB9C,0x003F,0x0066,
        0xFB9D,0x003F,0x0065,
        0xFB9E,0x003F,0x0065,
        0xFB9F,0x003F,0x0064,
        0xFBA0,0x003F,0x0064,
        0xFBA1,0x003F,0x0063,
        0xFBA2,0x003F,0x0063,
        0xFBA3,0x003F,0x0062,
        0xFBA4,0x003F,0x0062,
        0xFBA5,0x003F,0x0059,
        0xFBA6,0x003F,0x0059,
        0xFBA7,0x003F,0x0058,
        0xFBA8,0x003F,0x0058,
        0xFBA9,0x003F,0x0057,
        0xFBAA,0x003F,0x0056,
        0xFBAB,0x003F,0x0055,
        0xFBAC,0x003F,0x0055,
        0xFBAD,0x003F,0x0055,
        0xFBAE,0x003F,0x0055,
        0xFBAF,0x003F,0x0057,
        0xFBB0,0x003F,0x0056,
        0xFBB1,0x003F,0x0052,
        0xFBB2,0x003F,0x0052,
        0xFBB3,0x003F,0x0051,
        0xFBB4,0x003F,0x0049,
        0xFBB5,0x003F,0x0048,
        0xFBB6,0x003F,0x0047,
        0xFBB7,0x003F,0x0046,
        0xFBBA,0x003F,0x0043,
        0xFBBB,0x003F,0x0042,
        0xFBC4,0x003F,0x0045,
        0xFE70,0x0040,0x003F,
        0xFE71,0x0044,0x003F,
        0xFE72,0x0040,0x003F,
        0xFE73,0x0045,0x003F,
        0xFE74,0x0040,0x003F,
        0xFE76,0x0040,0x003F,
        0xFE77,0x0044,0x003F,
        0xFE78,0x0040,0x003F,
        0xFE79,0x0044,0x003F,
        0xFE7A,0x0040,0x003F,
        0xFE7B,0x0044,0x003F,
        0xFE7C,0x0042,0x003F,
        0xFE7D,0x0043,0x003F,
        0xFE7E,0x0040,0x003F,
        0xFE7F,0x0044,0x003F,
        0xFE80,0x0046,0x003F,
        0xFE81,0x0047,0x003F,
        0xFE82,0x0048,0x003F,
        0xFE83,0x0049,0x003F,
        0xFE84,0x0051,0x003F,
        0xFE85,0x0052,0x003F,
        0xFE86,0x0052,0x003F,
        0xFE87,0x0056,0x003F,
        0xFE88,0x0057,0x003F,
        0xFE89,0x0055,0x003F,
        0xFE8A,0x0055,0x003F,
        0xFE8B,0x0055,0x003F,
        0xFE8C,0x0055,0x003F,
        0xFE8D,0x0056,0x003F,
        0xFE8E,0x0057,0x003F,
        0xFE8F,0x0058,0x003F,
        0xFE90,0x0058,0x003F,
        0xFE91,0x0059,0x003F,
        0xFE92,0x0059,0x003F,
        0xFE93,0x0062,0x003F,
        0xFE94,0x0062,0x003F,
        0xFE95,0x0063,0x003F,
        0xFE96,0x0063,0x003F,
        0xFE97,0x0064,0x003F,
        0xFE98,0x0064,0x003F,
        0xFE99,0x0065,0x003F,
        0xFE9A,0x0065,0x003F,
        0xFE9B,0x0066,0x003F,
        0xFE9C,0x0066,0x003F,
        0xFE9D,0x0067,0x003F,
        0xFE9E,0x0067,0x003F,
        0xFE9F,0x0068,0x003F,
        0xFEA0,0x0068,0x003F,
        0xFEA1,0x0069,0x003F,
        0xFEA2,0x0069,0x003F,
        0xFEA3,0x0070,0x003F,
        0xFEA4,0x0070,0x003F,
        0xFEA5,0x0071,0x003F,
        0xFEA6,0x0071,0x003F,
        0xFEA7,0x0072,0x003F,
        0xFEA8,0x0072,0x003F,
        0xFEA9,0x0073,0x003F,
        0xFEAA,0x0073,0x003F,
        0xFEAB,0x0074,0x003F,
        0xFEAC,0x0074,0x003F,
        0xFEAD,0x0075,0x003F,
        0xFEAE,0x0075,0x003F,
        0xFEAF,0x0076,0x003F,
        0xFEB0,0x0076,0x003F,
        0xFEB1,0x0077,0x003F,
        0xFEB2,0x0077,0x003F,
        0xFEB3,0x0078,0x003F,
        0xFEB4,0x0078,0x003F,
        0xFEB5,0x0080,0x003F,
        0xFEB6,0x0080,0x003F,
        0xFEB7,0x008A,0x003F,
        0xFEB8,0x008A,0x003F,
        0xFEB9,0x008B,0x003F,
        0xFEBA,0x008B,0x003F,
        0xFEBB,0x008C,0x003F,
        0xFEBC,0x008C,0x003F,
        0xFEBD,0x008D,0x003F,
        0xFEBE,0x008D,0x003F,
        0xFEBF,0x008E,0x003F,
        0xFEC0,0x008E,0x003F,
        0xFEC1,0x008F,0x003F,
        0xFEC2,0x008F,0x003F,
        0xFEC3,0x008F,0x003F,
        0xFEC4,0x008F,0x003F,
        0xFEC5,0x0090,0x003F,
        0xFEC6,0x0090,0x003F,
        0xFEC7,0x0090,0x003F,
        0xFEC8,0x0090,0x003F,
        0xFEC9,0x009A,0x003F,
        0xFECA,0x009B,0x003F,
        0xFECB,0x009C,0x003F,
        0xFECC,0x009D,0x003F,
        0xFECD,0x009E,0x003F,
        0xFECE,0x009F,0x003F,
        0xFECF,0x00A0,0x003F,
        0xFED0,0x00AA,0x003F,
        0xFED1,0x00AB,0x003F,
        0xFED2,0x00AB,0x003F,
        0xFED3,0x00AC,0x003F,
        0xFED4,0x00AC,0x003F,
        0xFED5,0x00AD,0x003F,
        0xFED6,0x00AD,0x003F,
        0xFED7,0x00AE,0x003F,
        0xFED8,0x00AE,0x003F,
        0xFED9,0x00AF,0x003F,
        0xFEDA,0x00AF,0x003F,
        0xFEDB,0x00B0,0x003F,
        0xFEDC,0x00B0,0x003F,
        0xFEDD,0x00B1,0x003F,
        0xFEDE,0x00B1,0x003F,
        0xFEDF,0x00BA,0x003F,
        0xFEE0,0x00BA,0x003F,
        0xFEE1,0x00BB,0x003F,
        0xFEE2,0x00BB,0x003F,
        0xFEE3,0x00BC,0x003F,
        0xFEE4,0x00BC,0x003F,
        0xFEE5,0x00BD,0x003F,
        0xFEE6,0x00BD,0x003F,
        0xFEE7,0x00BE,0x003F,
        0xFEE8,0x00BE,0x003F,
        0xFEE9,0x00BF,0x003F,
        0xFEEA,0x00BF,0x003F,
        0xFEEB,0x00CB,0x003F,
        0xFEEC,0x00CD,0x003F,
        0xFEED,0x00CF,0x003F,
        0xFEEE,0x00CF,0x003F,
        0xFEEF,0x00DA,0x003F,
        0xFEF0,0x00DB,0x003F,
        0xFEF1,0x00DC,0x003F,
        0xFEF2,0x00DD,0x003F,
        0xFEF3,0x00DE,0x003F,
        0xFEF4,0x00DE,0x003F,
        0xFEF5,0x00B2,0x003F,
        0xFEF6,0x00B3,0x003F,
        0xFEF7,0x00B4,0x003F,
        0xFEF8,0x00B5,0x003F,
        0xFEF9,0x00B8,0x003F,
        0xFEFA,0x00B9,0x003F,
        0xFEFB,0x00B8,0x003F,
        0xFEFC,0x00B9,0x003F,
        0xFF01,0x005A,0x003F,
        0xFF02,0x007F,0x003F,
        0xFF03,0x007B,0x003F,
        0xFF04,0x005B,0x003F,
        0xFF05,0x006C,0x003F,
        0xFF06,0x0050,0x003F,
        0xFF07,0x007D,0x003F,
        0xFF08,0x004D,0x003F,
        0xFF09,0x005D,0x003F,
        0xFF0A,0x005C,0x003F,
        0xFF0B,0x004E,0x003F,
        0xFF0C,0x006B,0x003F,
        0xFF0D,0x0060,0x003F,
        0xFF0E,0x004B,0x003F,
        0xFF0F,0x0061,0x003F,
        0xFF10,0x00F0,0x003F,
        0xFF11,0x00F1,0x003F,
        0xFF12,0x00F2,0x003F,
        0xFF13,0x00F3,0x003F,
        0xFF14,0x00F4,0x003F,
        0xFF15,0x00F5,0x003F,
        0xFF16,0x00F6,0x003F,
        0xFF17,0x00F7,0x003F,
        0xFF18,0x00F8,0x003F,
        0xFF19,0x00F9,0x003F
    };

    char[] known424Misses =
    {
        0x05D0,0x0041,0x003F,
        0x05D1,0x0042,0x003F,
        0x05D2,0x0043,0x003F,
        0x05D3,0x0044,0x003F,
        0x05D4,0x0045,0x003F,
        0x05D5,0x0046,0x003F,
        0x05D6,0x0047,0x003F,
        0x05D7,0x0048,0x003F,
        0x05D8,0x0049,0x003F,
        0x05D9,0x0051,0x003F,
        0x05DA,0x0052,0x003F,
        0x05DB,0x0053,0x003F,
        0x05DC,0x0054,0x003F,
        0x05DD,0x0055,0x003F,
        0x05DE,0x0056,0x003F,
        0x05DF,0x0057,0x003F,
        0x05E0,0x0058,0x003F,
        0x05E1,0x0059,0x003F,
        0x05E2,0x0062,0x003F,
        0x05E3,0x0063,0x003F,
        0x05E4,0x0064,0x003F,
        0x05E5,0x0065,0x003F,
        0x05E6,0x0066,0x003F,
        0x05E7,0x0067,0x003F,
        0x05E8,0x0068,0x003F,
        0x05E9,0x0069,0x003F,
        0x05EA,0x0071,0x003F,
        0x0827,0x003F,0x006C,
        0x08A7,0x003F,0x0071,
        0x08A8,0x003F,0x0069,
        0x08A9,0x003F,0x0068,
        0x08AA,0x003F,0x0067,
        0x08AB,0x003F,0x0066,
        0x08AC,0x003F,0x0065,
        0x08AD,0x003F,0x0064,
        0x08AE,0x003F,0x0063,
        0x08AF,0x003F,0x0062,
        0x08B0,0x003F,0x0059,
        0x08B1,0x003F,0x0058,
        0x08B2,0x003F,0x0057,
        0x08B3,0x003F,0x0056,
        0x08B4,0x003F,0x0055,
        0x08B5,0x003F,0x0054,
        0x08B6,0x003F,0x0053,
        0x08B7,0x003F,0x0052,
        0x08B8,0x003F,0x0051,
        0x08B9,0x003F,0x0049,
        0x08BA,0x003F,0x0048,
        0x08BB,0x003F,0x0047,
        0x08BC,0x003F,0x0046,
        0x08BD,0x003F,0x0045,
        0x08BE,0x003F,0x0044,
        0x08BF,0x003F,0x0043,
        0x08C0,0x003F,0x0042,
        0x08C1,0x003F,0x0041,
        0xFB1E,0x003F,0x00F0,
        0xFB1F,0x003F,0x00F1,
        0xFB20,0x003F,0x00F2,
        0xFB21,0x003F,0x00F3,
        0xFB22,0x003F,0x00F4,
        0xFB23,0x003F,0x00F5,
        0xFB24,0x003F,0x00F6,
        0xFB25,0x003F,0x00F7,
        0xFB26,0x003F,0x00F8,
        0xFB27,0x003F,0x00F9,
        0xFB28,0x003F,0x0061,
        0xFB29,0x003F,0x004B,
        0xFB2A,0x003F,0x0060,
        0xFB2B,0x003F,0x006B,
        0xFB2C,0x003F,0x004E,
        0xFB2D,0x003F,0x005C,
        0xFB2E,0x003F,0x005D,
        0xFB2F,0x003F,0x004D,
        0xFB30,0x003F,0x007D,
        0xFB31,0x003F,0x0050,
        0xFB32,0x003F,0x006C,
        0xFB33,0x003F,0x005B,
        0xFB34,0x003F,0x007B,
        0xFB35,0x003F,0x007F,
        0xFB36,0x003F,0x005A,
        0xFF01,0x005A,0x003F,
        0xFF02,0x007F,0x003F,
        0xFF03,0x007B,0x003F,
        0xFF04,0x005B,0x003F,
        0xFF05,0x006C,0x003F,
        0xFF06,0x0050,0x003F,
        0xFF07,0x007D,0x003F,
        0xFF08,0x004D,0x003F,
        0xFF09,0x005D,0x003F,
        0xFF0A,0x005C,0x003F,
        0xFF0B,0x004E,0x003F,
        0xFF0C,0x006B,0x003F,
        0xFF0D,0x0060,0x003F,
        0xFF0E,0x004B,0x003F,
        0xFF0F,0x0061,0x003F,
        0xFF10,0x00F0,0x003F,
        0xFF11,0x00F1,0x003F,
        0xFF12,0x00F2,0x003F,
        0xFF13,0x00F3,0x003F,
        0xFF14,0x00F4,0x003F,
        0xFF15,0x00F5,0x003F,
        0xFF16,0x00F6,0x003F,
        0xFF17,0x00F7,0x003F,
        0xFF18,0x00F8,0x003F,
        0xFF19,0x00F9,0x003F,
    };

    char[] known862MissesEtoU =
    {
        0x0014,0x0014,0x00B6,
        0x0015,0x0015,0x00A7,
    };

    char[] known862MissesUtoE =
    {
        0x0014,0x0014,0x007F,
        0x0015,0x0015,0x007F,
        0x05D0,0x0080,0x007F,
        0x05D1,0x0081,0x007F,
        0x05D2,0x0082,0x007F,
        0x05D3,0x0083,0x007F,
        0x05D4,0x0084,0x007F,
        0x05D5,0x0085,0x007F,
        0x05D6,0x0086,0x007F,
        0x05D7,0x0087,0x007F,
        0x05D8,0x0088,0x007F,
        0x05D9,0x0089,0x007F,
        0x05DA,0x008A,0x007F,
        0x05DB,0x008B,0x007F,
        0x05DC,0x008C,0x007F,
        0x05DD,0x008D,0x007F,
        0x05DE,0x008E,0x007F,
        0x05DF,0x008F,0x007F,
        0x05E0,0x0090,0x007F,
        0x05E1,0x0091,0x007F,
        0x05E2,0x0092,0x007F,
        0x05E3,0x0093,0x007F,
        0x05E4,0x0094,0x007F,
        0x05E5,0x0095,0x007F,
        0x05E6,0x0096,0x007F,
        0x05E7,0x0097,0x007F,
        0x05E8,0x0098,0x007F,
        0x05E9,0x0099,0x007F,
        0x05EA,0x009A,0x007F,
        0x0827,0x007F,0x0025,
        0x08A7,0x007F,0x009A,
        0x08A8,0x007F,0x0099,
        0x08A9,0x007F,0x0098,
        0x08AA,0x007F,0x0097,
        0x08AB,0x007F,0x0096,
        0x08AC,0x007F,0x0095,
        0x08AD,0x007F,0x0094,
        0x08AE,0x007F,0x0093,
        0x08AF,0x007F,0x0092,
        0x08B0,0x007F,0x0091,
        0x08B1,0x007F,0x0090,
        0x08B2,0x007F,0x008F,
        0x08B3,0x007F,0x008E,
        0x08B4,0x007F,0x008D,
        0x08B5,0x007F,0x008C,
        0x08B6,0x007F,0x008B,
        0x08B7,0x007F,0x008A,
        0x08B8,0x007F,0x0089,
        0x08B9,0x007F,0x0088,
        0x08BA,0x007F,0x0087,
        0x08BB,0x007F,0x0086,
        0x08BC,0x007F,0x0085,
        0x08BD,0x007F,0x0084,
        0x08BE,0x007F,0x0083,
        0x08BF,0x007F,0x0082,
        0x08C0,0x007F,0x0081,
        0x08C1,0x007F,0x0080,
        0x2022,0x0007,0x007F,
        0x203C,0x0013,0x007F,
        0x2190,0x001B,0x007F,
        0x2191,0x0018,0x007F,
        0x2192,0x001A,0x007F,
        0x2193,0x0019,0x007F,
        0x2194,0x001D,0x007F,
        0x2195,0x0012,0x007F,
        0x21A8,0x0017,0x007F,
        0x221F,0x001C,0x007F,
        0x25AC,0x0016,0x007F,
        0x25B2,0x001E,0x007F,
        0x25BA,0x0010,0x007F,
        0x25BC,0x001F,0x007F,
        0x25C4,0x0011,0x007F,
        0x25CB,0x0009,0x007F,
        0x25D8,0x0008,0x007F,
        0x25D9,0x000A,0x007F,
        0x263A,0x0001,0x007F,
        0x263B,0x0002,0x007F,
        0x263C,0x000F,0x007F,
        0x2640,0x000C,0x007F,
        0x2642,0x000B,0x007F,
        0x2660,0x0006,0x007F,
        0x2663,0x0005,0x007F,
        0x2665,0x0003,0x007F,
        0x2666,0x0004,0x007F,
        0x266A,0x000D,0x007F,
        0x266B,0x000E,0x007F,
        0xFF01,0x0021,0x007F,
        0xFF02,0x0022,0x007F,
        0xFF03,0x0023,0x007F,
        0xFF04,0x0024,0x007F,
        0xFF05,0x0025,0x007F,
        0xFF06,0x0026,0x007F,
        0xFF07,0x0027,0x007F,
        0xFF08,0x0028,0x007F,
        0xFF09,0x0029,0x007F,
        0xFF0A,0x002A,0x007F,
        0xFF0B,0x002B,0x007F,
        0xFF0C,0x002C,0x007F,
        0xFF0D,0x002D,0x007F,
        0xFF0E,0x002E,0x007F,
        0xFF0F,0x002F,0x007F,
        0xFF10,0x0030,0x007F,
        0xFF11,0x0031,0x007F,
        0xFF12,0x0032,0x007F,
        0xFF13,0x0033,0x007F,
        0xFF14,0x0034,0x007F,
        0xFF15,0x0035,0x007F,
        0xFF16,0x0036,0x007F,
        0xFF17,0x0037,0x007F,
        0xFF18,0x0038,0x007F,
        0xFF19,0x0039,0x007F,
        0xFF1A,0x003A,0x007F,
        0xFF1B,0x003B,0x007F,
        0xFF1C,0x003C,0x007F,
        0xFF1D,0x003D,0x007F,
        0xFF1E,0x003E,0x007F,
        0xFF1F,0x003F,0x007F,
        0xFF20,0x0040,0x007F,
        0xFF21,0x0041,0x007F,
        0xFF22,0x0042,0x007F,
        0xFF23,0x0043,0x007F,
        0xFF24,0x0044,0x007F,
        0xFF25,0x0045,0x007F,
        0xFF26,0x0046,0x007F,
        0xFF27,0x0047,0x007F,
        0xFF28,0x0048,0x007F,
        0xFF29,0x0049,0x007F,
        0xFF2A,0x004A,0x007F,
        0xFF2B,0x004B,0x007F,
        0xFF2C,0x004C,0x007F,
        0xFF2D,0x004D,0x007F,
        0xFF2E,0x004E,0x007F,
        0xFF2F,0x004F,0x007F,
        0xFF30,0x0050,0x007F,
        0xFF31,0x0051,0x007F,
        0xFF32,0x0052,0x007F,
        0xFF33,0x0053,0x007F,
        0xFF34,0x0054,0x007F,
        0xFF35,0x0055,0x007F,
        0xFF36,0x0056,0x007F,
        0xFF37,0x0057,0x007F,
        0xFF38,0x0058,0x007F,
        0xFF39,0x0059,0x007F,
        0xFF3A,0x005A,0x007F,
        0xFF3B,0x005B,0x007F,
        0xFF3C,0x005C,0x007F,
        0xFF3D,0x005D,0x007F,
        0xFF3E,0x005E,0x007F,
        0xFF3F,0x005F,0x007F,
        0xFF40,0x0060,0x007F,
        0xFF41,0x0061,0x007F,
        0xFF42,0x0062,0x007F,
        0xFF43,0x0063,0x007F,
        0xFF44,0x0064,0x007F,
        0xFF45,0x0065,0x007F,
        0xFF46,0x0066,0x007F,
        0xFF47,0x0067,0x007F,
        0xFF48,0x0068,0x007F,
        0xFF49,0x0069,0x007F,
        0xFF4A,0x006A,0x007F,
        0xFF4B,0x006B,0x007F,
        0xFF4C,0x006C,0x007F,
        0xFF4D,0x006D,0x007F,
        0xFF4E,0x006E,0x007F,
        0xFF4F,0x006F,0x007F,
        0xFF50,0x0070,0x007F,
        0xFF51,0x0071,0x007F,
        0xFF52,0x0072,0x007F,
        0xFF53,0x0073,0x007F,
        0xFF54,0x0074,0x007F,
        0xFF55,0x0075,0x007F,
        0xFF56,0x0076,0x007F,
        0xFF57,0x0077,0x007F,
        0xFF58,0x0078,0x007F,
        0xFF59,0x0079,0x007F,
        0xFF5A,0x007A,0x007F,
        0xFF5B,0x007B,0x007F,
        0xFF5C,0x007C,0x007F,
        0xFF5D,0x007D,0x007F,
        0xFF5E,0x007E,0x007F,
        0xFFE8,0x00B3,0x007F,
        0xFFE9,0x001B,0x007F,
        0xFFEA,0x0018,0x007F,
        0xFFEB,0x001A,0x007F,
        0xFFEC,0x0019,0x007F,
        0xFFED,0x00FE,0x007F,
        0xFFEE,0x0009,0x007F,
    };

    char[] known12708Misses =
    {
        0x0000,0x0000,0x003F,
        0x0001,0x0001,0x003F,
        0x0002,0x0002,0x003F,
        0x0003,0x0003,0x003F,
        0x0004,0x0037,0x003F,
        0x0005,0x002D,0x003F,
        0x0006,0x002E,0x003F,
        0x0007,0x002F,0x003F,
        0x0008,0x0016,0x003F,
        0x0009,0x0005,0x003F,
        0x000A,0x0025,0x003F,
        0x000B,0x000B,0x003F,
        0x000C,0x000C,0x003F,
        0x000D,0x000D,0x003F,
        0x000E,0x000E,0x003F,
        0x000F,0x000F,0x003F,
        0x0010,0x0010,0x003F,
        0x0011,0x0011,0x003F,
        0x0012,0x0012,0x003F,
        0x0013,0x0013,0x003F,
        0x0014,0x003C,0x003F,
        0x0015,0x003D,0x003F,
        0x0016,0x0032,0x003F,
        0x0017,0x0026,0x003F,
        0x0018,0x0018,0x003F,
        0x0019,0x0019,0x003F,
        0x001B,0x0027,0x003F,
        0x001C,0x001C,0x003F,
        0x001D,0x001D,0x003F,
        0x001E,0x001E,0x003F,
        0x001F,0x001F,0x003F,
        0x0020,0x0040,0x003F,
        0x0021,0x005A,0x003F,
        0x0022,0x007F,0x003F,
        0x0023,0x007B,0x003F,
        0x0024,0x005B,0x003F,
        0x0025,0x006C,0x003F,
        0x0026,0x0050,0x003F,
        0x0027,0x007D,0x003F,
        0x0028,0x004D,0x003F,
        0x0029,0x005D,0x003F,
        0x002A,0x005C,0x003F,
        0x002B,0x004E,0x003F,
        0x002C,0x006B,0x003F,
        0x002D,0x0060,0x003F,
        0x002E,0x004B,0x003F,
        0x002F,0x0061,0x003F,
        0x0030,0x00F0,0x003F,
        0x0031,0x00F1,0x003F,
        0x0032,0x00F2,0x003F,
        0x0033,0x00F3,0x003F,
        0x0034,0x00F4,0x003F,
        0x0035,0x00F5,0x003F,
        0x0036,0x00F6,0x003F,
        0x0037,0x00F7,0x003F,
        0x0038,0x00F8,0x003F,
        0x0039,0x00F9,0x003F,
        0x003A,0x007A,0x003F,
        0x003B,0x005E,0x003F,
        0x003C,0x004C,0x003F,
        0x003D,0x007E,0x003F,
        0x003E,0x006E,0x003F,
        0x003F,0x006F,0x003F,
        0x0040,0x007C,0x003F,
        0x0041,0x00C1,0x003F,
        0x0042,0x00C2,0x003F,
        0x0043,0x00C3,0x003F,
        0x0044,0x00C4,0x003F,
        0x0045,0x00C5,0x003F,
        0x0046,0x00C6,0x003F,
        0x0047,0x00C7,0x003F,
        0x0048,0x00C8,0x003F,
        0x0049,0x00C9,0x003F,
        0x004A,0x00D1,0x003F,
        0x004B,0x00D2,0x003F,
        0x004C,0x00D3,0x003F,
        0x004D,0x00D4,0x003F,
        0x004E,0x00D5,0x003F,
        0x004F,0x00D6,0x003F,
        0x0050,0x00D7,0x003F,
        0x0051,0x00D8,0x003F,
        0x0052,0x00D9,0x003F,
        0x0053,0x00E2,0x003F,
        0x0054,0x00E3,0x003F,
        0x0055,0x00E4,0x003F,
        0x0056,0x00E5,0x003F,
        0x0057,0x00E6,0x003F,
        0x0058,0x00E7,0x003F,
        0x0059,0x00E8,0x003F,
        0x005A,0x00E9,0x003F,
        0x005F,0x006D,0x003F,
        0x0061,0x0081,0x003F,
        0x0062,0x0082,0x003F,
        0x0063,0x0083,0x003F,
        0x0064,0x0084,0x003F,
        0x0065,0x0085,0x003F,
        0x0066,0x0086,0x003F,
        0x0067,0x0087,0x003F,
        0x0068,0x0088,0x003F,
        0x0069,0x0089,0x003F,
        0x006A,0x0091,0x003F,
        0x006B,0x0092,0x003F,
        0x006C,0x0093,0x003F,
        0x006D,0x0094,0x003F,
        0x006E,0x0095,0x003F,
        0x006F,0x0096,0x003F,
        0x0070,0x0097,0x003F,
        0x0071,0x0098,0x003F,
        0x0072,0x0099,0x003F,
        0x0073,0x00A2,0x003F,
        0x0074,0x00A3,0x003F,
        0x0075,0x00A4,0x003F,
        0x0076,0x00A5,0x003F,
        0x0077,0x00A6,0x003F,
        0x0078,0x00A7,0x003F,
        0x0079,0x00A8,0x003F,
        0x007A,0x00A9,0x003F,
        0x007C,0x004F,0x003F,
        0x007F,0x0007,0x003F,
        0x0080,0x0020,0x003F,
        0x0081,0x0021,0x003F,
        0x0082,0x0022,0x003F,
        0x0083,0x0023,0x003F,
        0x0084,0x0024,0x003F,
        0x0085,0x0015,0x003F,
        0x0086,0x0006,0x003F,
        0x0087,0x0017,0x003F,
        0x0088,0x0028,0x003F,
        0x0089,0x0029,0x003F,
        0x008A,0x002A,0x003F,
        0x008B,0x002B,0x003F,
        0x008C,0x002C,0x003F,
        0x008D,0x0009,0x003F,
        0x008E,0x000A,0x003F,
        0x008F,0x001B,0x003F,
        0x0090,0x0030,0x003F,
        0x0091,0x0031,0x003F,
        0x0092,0x001A,0x003F,
        0x0093,0x0033,0x003F,
        0x0094,0x0034,0x003F,
        0x0095,0x0035,0x003F,
        0x0096,0x0036,0x003F,
        0x0097,0x0008,0x003F,
        0x0098,0x0038,0x003F,
        0x0099,0x0039,0x003F,
        0x009A,0x003A,0x003F,
        0x009B,0x003B,0x003F,
        0x009C,0x0004,0x003F,
        0x009D,0x0014,0x003F,
        0x009E,0x003E,0x003F,
        0x009F,0x00FF,0x003F,
        0x00A0,0x0041,0x003F,
        0x00A2,0x004A,0x003F,
        0x00A3,0x003F,0x004F,
        0x00A5,0x003F,0x00A9,
        0x00A6,0x006A,0x00A8,
        0x00A7,0x003F,0x00A7,
        0x00A8,0x003F,0x00A6,
        0x00A9,0x003F,0x00A5,
        0x00AA,0x003F,0x00A4,
        0x00AB,0x003F,0x00A3,
        0x00AC,0x005F,0x00A2,
        0x00AD,0x00CA,0x0099,
        0x00AE,0x003F,0x0098,
        0x00AF,0x003F,0x0097,
        0x00B0,0x003F,0x0096,
        0x00B1,0x003F,0x0095,
        0x00B2,0x003F,0x0094,
        0x00B3,0x003F,0x0093,
        0x00B4,0x003F,0x0092,
        0x00B5,0x003F,0x0091,
        0x00B6,0x003F,0x0089,
        0x00B7,0x003F,0x0088,
        0x00B8,0x003F,0x0087,
        0x00B9,0x003F,0x0086,
        0x00BA,0x003F,0x0085,
        0x00BB,0x003F,0x0084,
        0x00BC,0x003F,0x0083,
        0x00BD,0x003F,0x0082,
        0x00BE,0x003F,0x0081,
        0x00C0,0x003F,0x006D,
        0x00C5,0x003F,0x00E9,
        0x00C6,0x003F,0x00E8,
        0x00C7,0x003F,0x00E7,
        0x00C8,0x003F,0x00E6,
        0x00C9,0x003F,0x00E5,
        0x00CA,0x003F,0x00E4,
        0x00CB,0x003F,0x00E3,
        0x00CC,0x003F,0x00E2,
        0x00CD,0x003F,0x00D9,
        0x00CE,0x003F,0x00D8,
        0x00CF,0x003F,0x00D7,
        0x00D0,0x003F,0x00D6,
        0x00D1,0x003F,0x00D5,
        0x00D2,0x003F,0x00D4,
        0x00D3,0x003F,0x00D3,
        0x00D4,0x003F,0x00D2,
        0x00D5,0x003F,0x00D1,
        0x00D6,0x003F,0x00C9,
        0x00D7,0x00E0,0x00C8,
        0x00D8,0x003F,0x00C7,
        0x00D9,0x003F,0x00C6,
        0x00DA,0x003F,0x00C5,
        0x00DB,0x003F,0x00C4,
        0x00DC,0x003F,0x00C3,
        0x00DD,0x003F,0x00C2,
        0x00DE,0x003F,0x00C1,
        0x00DF,0x003F,0x007C,
        0x00E0,0x003F,0x006F,
        0x00E1,0x003F,0x006E,
        0x00E2,0x003F,0x007E,
        0x00E3,0x003F,0x004C,
        0x00E4,0x003F,0x005E,
        0x00E5,0x003F,0x007A,
        0x00F7,0x00A1,0x003F,
        0x043B,0x003F,0x0045,
        0x0444,0x003F,0x0042,
        0x0445,0x003F,0x0043,
        0x0448,0x003F,0x0046,
        0x0449,0x003F,0x0047,
        0x044A,0x003F,0x0048,
        0x044B,0x003F,0x0049,
        0x044C,0x003F,0x0051,
        0x044D,0x003F,0x0052,
        0x044E,0x003F,0x0052,
        0x044F,0x003F,0x0056,
        0x0450,0x003F,0x0057,
        0x0451,0x003F,0x0055,
        0x0452,0x003F,0x0055,
        0x0453,0x003F,0x0055,
        0x0454,0x003F,0x0055,
        0x0455,0x003F,0x0056,
        0x0456,0x003F,0x0057,
        0x0457,0x003F,0x0058,
        0x0458,0x003F,0x0058,
        0x0459,0x003F,0x0059,
        0x045A,0x003F,0x0059,
        0x045B,0x003F,0x0062,
        0x045C,0x003F,0x0062,
        0x045D,0x003F,0x0063,
        0x045E,0x003F,0x0063,
        0x045F,0x003F,0x0064,
        0x0460,0x003F,0x0064,
        0x0461,0x003F,0x0065,
        0x0462,0x003F,0x0065,
        0x0463,0x003F,0x0066,
        0x0464,0x003F,0x0066,
        0x0465,0x003F,0x0067,
        0x0466,0x003F,0x0067,
        0x0467,0x003F,0x0068,
        0x0468,0x003F,0x0068,
        0x0469,0x003F,0x0069,
        0x046A,0x003F,0x0069,
        0x046B,0x003F,0x0070,
        0x046C,0x003F,0x0070,
        0x046D,0x003F,0x0071,
        0x046E,0x003F,0x0071,
        0x046F,0x003F,0x0072,
        0x0470,0x003F,0x0072,
        0x0471,0x003F,0x0073,
        0x0472,0x003F,0x0073,
        0x0473,0x003F,0x0074,
        0x0474,0x003F,0x0074,
        0x0475,0x003F,0x0075,
        0x0476,0x003F,0x0075,
        0x0477,0x003F,0x0076,
        0x0478,0x003F,0x0076,
        0x0479,0x003F,0x0077,
        0x047A,0x003F,0x0077,
        0x047B,0x003F,0x0078,
        0x047C,0x003F,0x0078,
        0x047D,0x003F,0x0080,
        0x047E,0x003F,0x0080,
        0x047F,0x003F,0x008A,
        0x0480,0x003F,0x008A,
        0x0481,0x003F,0x008B,
        0x0482,0x003F,0x008B,
        0x0483,0x003F,0x008C,
        0x0484,0x003F,0x008C,
        0x0485,0x003F,0x008D,
        0x0486,0x003F,0x008D,
        0x0487,0x003F,0x008E,
        0x0488,0x003F,0x008E,
        0x0489,0x003F,0x008F,
        0x048A,0x003F,0x008F,
        0x048B,0x003F,0x008F,
        0x048C,0x003F,0x008F,
        0x048D,0x003F,0x0090,
        0x048E,0x003F,0x0090,
        0x048F,0x003F,0x0090,
        0x0490,0x003F,0x0090,
        0x0491,0x003F,0x009A,
        0x0492,0x003F,0x009B,
        0x0493,0x003F,0x009C,
        0x0494,0x003F,0x009D,
        0x0495,0x003F,0x009E,
        0x0496,0x003F,0x009F,
        0x0497,0x003F,0x00A0,
        0x0498,0x003F,0x00AA,
        0x0499,0x003F,0x00AB,
        0x049A,0x003F,0x00AB,
        0x049B,0x003F,0x00AC,
        0x049C,0x003F,0x00AC,
        0x049D,0x003F,0x00AD,
        0x049E,0x003F,0x00AD,
        0x049F,0x003F,0x00AE,
        0x04A0,0x003F,0x00AE,
        0x04A1,0x003F,0x00AF,
        0x04A2,0x003F,0x00AF,
        0x04A3,0x003F,0x00B0,
        0x04A4,0x003F,0x00B0,
        0x04A5,0x003F,0x00B1,
        0x04A6,0x003F,0x00B1,
        0x04A7,0x003F,0x00BA,
        0x04A8,0x003F,0x00BA,
        0x04A9,0x003F,0x00BB,
        0x04AA,0x003F,0x00BB,
        0x04AB,0x003F,0x00BC,
        0x04AC,0x003F,0x00BC,
        0x04AD,0x003F,0x00BD,
        0x04AE,0x003F,0x00BD,
        0x04AF,0x003F,0x00BE,
        0x04B0,0x003F,0x00BE,
        0x04B1,0x003F,0x00BF,
        0x04B2,0x003F,0x00BF,
        0x04B3,0x003F,0x00CB,
        0x04B4,0x003F,0x00CD,
        0x04B5,0x003F,0x00CF,
        0x04B6,0x003F,0x00CF,
        0x04B7,0x003F,0x00DA,
        0x04B8,0x003F,0x00DB,
        0x04B9,0x003F,0x00DC,
        0x04BA,0x003F,0x00DD,
        0x04BB,0x003F,0x00DE,
        0x04BC,0x003F,0x00DE,
        0x04BD,0x003F,0x00B2,
        0x04BE,0x003F,0x00B3,
        0x04BF,0x003F,0x00B4,
        0x04C0,0x003F,0x00B5,
        0x04C1,0x003F,0x00B8,
        0x04C2,0x003F,0x00B9,
        0x04C3,0x003F,0x00B8,
        0x04C4,0x003F,0x00B9,
        0x04C9,0x003F,0x005A,
        0x04CA,0x003F,0x007F,
        0x04CB,0x003F,0x007B,
        0x04CC,0x003F,0x005B,
        0x04CD,0x003F,0x006C,
        0x04CE,0x003F,0x0050,
        0x04CF,0x003F,0x007D,
        0x04D0,0x003F,0x004D,
        0x04D1,0x003F,0x005D,
        0x04D2,0x003F,0x005C,
        0x04D3,0x003F,0x004E,
        0x04D4,0x003F,0x006B,
        0x04D5,0x003F,0x0060,
        0x04D6,0x003F,0x004B,
        0x04D7,0x003F,0x0061,
        0x04D8,0x003F,0x00F9,
        0x04D9,0x003F,0x00F8,
        0x04DA,0x003F,0x00F7,
        0x04DB,0x003F,0x00F6,
        0x04DC,0x003F,0x00F5,
        0x04DD,0x003F,0x00F4,
        0x04DE,0x003F,0x00F3,
        0x04DF,0x003F,0x00F2,
        0x04E0,0x003F,0x00F1,
        0x04E1,0x003F,0x00F0,
        0x060C,0x0079,0x003F,
        0x061B,0x00C0,0x003F,
        0x061F,0x00D0,0x003F,
        0x0621,0x0046,0x003F,
        0x0622,0x0047,0x003F,
        0x0623,0x0049,0x003F,
        0x0624,0x0052,0x003F,
        0x0625,0x0056,0x003F,
        0x0626,0x0055,0x003F,
        0x0627,0x0056,0x003F,
        0x0628,0x0058,0x003F,
        0x0629,0x0062,0x003F,
        0x062A,0x0063,0x003F,
        0x062B,0x0065,0x003F,
        0x062C,0x0067,0x003F,
        0x062D,0x0069,0x003F,
        0x062E,0x0071,0x003F,
        0x062F,0x0073,0x003F,
        0x0630,0x0074,0x003F,
        0x0631,0x0075,0x003F,
        0x0632,0x0076,0x003F,
        0x0633,0x0077,0x003F,
        0x0634,0x0080,0x003F,
        0x0635,0x008B,0x003F,
        0x0636,0x008D,0x003F,
        0x0637,0x008F,0x003F,
        0x0638,0x0090,0x003F,
        0x0639,0x009A,0x003F,
        0x063A,0x009E,0x003F,
        0x0640,0x0044,0x003F,
        0x0641,0x00AB,0x003F,
        0x0642,0x00AD,0x003F,
        0x0643,0x00AF,0x003F,
        0x0644,0x00B1,0x003F,
        0x0645,0x00BB,0x003F,
        0x0646,0x00BD,0x003F,
        0x0647,0x00BF,0x003F,
        0x0648,0x00CF,0x003F,
        0x0649,0x00DA,0x003F,
        0x064A,0x00DC,0x003F,
        0x0651,0x0042,0x003F,
        0x0660,0x00DF,0x003F,
        0x0661,0x00EA,0x003F,
        0x0662,0x00EB,0x003F,
        0x0663,0x00ED,0x003F,
        0x0664,0x00EE,0x003F,
        0x0665,0x00EF,0x003F,
        0x0666,0x00FB,0x003F,
        0x0667,0x00FC,0x003F,
        0x0668,0x00FD,0x003F,
        0x0669,0x00FE,0x003F,
        0x066A,0x006C,0x003F,
        0x066B,0x006B,0x003F,
        0x066C,0x004B,0x003F,
        0x066D,0x005C,0x003F,
        0x2007,0x00E1,0x003F,
        0x200B,0x0045,0x003F,
        0x20AC,0x00FA,0x003F,
        0xDF53,0x003F,0x00FA,
        0xDFF4,0x003F,0x0045,
        0xDFF8,0x003F,0x00E1,
        0xF77A,0x003F,0x0079,
        0xF789,0x003F,0x00C0,
        0xF78D,0x003F,0x00D0,
        0xF78F,0x003F,0x0046,
        0xF790,0x003F,0x0047,
        0xF791,0x003F,0x0049,
        0xF792,0x003F,0x0052,
        0xF793,0x003F,0x0056,
        0xF794,0x003F,0x0055,
        0xF795,0x003F,0x0057,
        0xF796,0x003F,0x0059,
        0xF797,0x003F,0x0062,
        0xF798,0x003F,0x0064,
        0xF799,0x003F,0x0066,
        0xF79A,0x003F,0x0068,
        0xF79B,0x003F,0x0070,
        0xF79C,0x003F,0x0072,
        0xF79D,0x003F,0x0073,
        0xF79E,0x003F,0x0074,
        0xF79F,0x003F,0x0075,
        0xF7A0,0x003F,0x0076,
        0xF7A1,0x003F,0x0078,
        0xF7A2,0x003F,0x008A,
        0xF7A3,0x003F,0x008C,
        0xF7A4,0x003F,0x008E,
        0xF7A5,0x003F,0x008F,
        0xF7A6,0x003F,0x0090,
        0xF7A7,0x003F,0x009D,
        0xF7A8,0x003F,0x009F,
        0xF7AE,0x003F,0x0044,
        0xF7AF,0x003F,0x00AC,
        0xF7B0,0x003F,0x00AE,
        0xF7B1,0x003F,0x00B0,
        0xF7B2,0x003F,0x00BA,
        0xF7B3,0x003F,0x00BC,
        0xF7B4,0x003F,0x00BE,
        0xF7B5,0x003F,0x00CD,
        0xF7B6,0x003F,0x00CF,
        0xF7B7,0x003F,0x00DA,
        0xF7B8,0x003F,0x00DE,
        0xF7BA,0x003F,0x0045,
        0xF7CA,0x003F,0x00B2,
        0xF7CB,0x003F,0x00B4,
        0xF7CC,0x003F,0x00B8,
        0xF7CD,0x003F,0x00B8,
        0xF7CE,0x003F,0x00FE,
        0xF7CF,0x003F,0x00FD,
        0xF7D0,0x003F,0x00FC,
        0xF7D1,0x003F,0x00FB,
        0xF7D2,0x003F,0x00EF,
        0xF7D3,0x003F,0x00EE,
        0xF7D4,0x003F,0x00ED,
        0xF7D5,0x003F,0x00EB,
        0xF7D6,0x003F,0x00EA,
        0xF7D7,0x003F,0x00DF,
        0xF7D8,0x003F,0x006C,
        0xF7D9,0x003F,0x004B,
        0xF7DA,0x003F,0x006B,
        0xF7DB,0x003F,0x005C,
        0xFE70,0x0040,0x003F,
        0xFE71,0x0044,0x003F,
        0xFE72,0x0040,0x003F,
        0xFE73,0x0045,0x003F,
        0xFE74,0x0040,0x003F,
        0xFE76,0x0040,0x003F,
        0xFE77,0x0044,0x003F,
        0xFE78,0x0040,0x003F,
        0xFE79,0x0044,0x003F,
        0xFE7A,0x0040,0x003F,
        0xFE7B,0x0044,0x003F,
        0xFE7C,0x0042,0x003F,
        0xFE7D,0x0043,0x003F,
        0xFE7E,0x0040,0x003F,
        0xFE7F,0x0044,0x003F,
        0xFE80,0x0046,0x003F,
        0xFE81,0x0047,0x003F,
        0xFE82,0x0048,0x003F,
        0xFE83,0x0049,0x003F,
        0xFE84,0x0051,0x003F,
        0xFE85,0x0052,0x003F,
        0xFE86,0x0052,0x003F,
        0xFE87,0x0056,0x003F,
        0xFE88,0x0057,0x003F,
        0xFE89,0x0055,0x003F,
        0xFE8A,0x0055,0x003F,
        0xFE8B,0x0055,0x003F,
        0xFE8C,0x0055,0x003F,
        0xFE8D,0x0056,0x003F,
        0xFE8E,0x0057,0x003F,
        0xFE8F,0x0058,0x003F,
        0xFE90,0x0058,0x003F,
        0xFE91,0x0059,0x003F,
        0xFE92,0x0059,0x003F,
        0xFE93,0x0062,0x003F,
        0xFE94,0x0062,0x003F,
        0xFE95,0x0063,0x003F,
        0xFE96,0x0063,0x003F,
        0xFE97,0x0064,0x003F,
        0xFE98,0x0064,0x003F,
        0xFE99,0x0065,0x003F,
        0xFE9A,0x0065,0x003F,
        0xFE9B,0x0066,0x003F,
        0xFE9C,0x0066,0x003F,
        0xFE9D,0x0067,0x003F,
        0xFE9E,0x0067,0x003F,
        0xFE9F,0x0068,0x003F,
        0xFEA0,0x0068,0x003F,
        0xFEA1,0x0069,0x003F,
        0xFEA2,0x0069,0x003F,
        0xFEA3,0x0070,0x003F,
        0xFEA4,0x0070,0x003F,
        0xFEA5,0x0071,0x003F,
        0xFEA6,0x0071,0x003F,
        0xFEA7,0x0072,0x003F,
        0xFEA8,0x0072,0x003F,
        0xFEA9,0x0073,0x003F,
        0xFEAA,0x0073,0x003F,
        0xFEAB,0x0074,0x003F,
        0xFEAC,0x0074,0x003F,
        0xFEAD,0x0075,0x003F,
        0xFEAE,0x0075,0x003F,
        0xFEAF,0x0076,0x003F,
        0xFEB0,0x0076,0x003F,
        0xFEB1,0x0077,0x003F,
        0xFEB2,0x0077,0x003F,
        0xFEB3,0x0078,0x003F,
        0xFEB4,0x0078,0x003F,
        0xFEB5,0x0080,0x003F,
        0xFEB6,0x0080,0x003F,
        0xFEB7,0x008A,0x003F,
        0xFEB8,0x008A,0x003F,
        0xFEB9,0x008B,0x003F,
        0xFEBA,0x008B,0x003F,
        0xFEBB,0x008C,0x003F,
        0xFEBC,0x008C,0x003F,
        0xFEBD,0x008D,0x003F,
        0xFEBE,0x008D,0x003F,
        0xFEBF,0x008E,0x003F,
        0xFEC0,0x008E,0x003F,
        0xFEC1,0x008F,0x003F,
        0xFEC2,0x008F,0x003F,
        0xFEC3,0x008F,0x003F,
        0xFEC4,0x008F,0x003F,
        0xFEC5,0x0090,0x003F,
        0xFEC6,0x0090,0x003F,
        0xFEC7,0x0090,0x003F,
        0xFEC8,0x0090,0x003F,
        0xFEC9,0x009A,0x003F,
        0xFECA,0x009B,0x003F,
        0xFECB,0x009C,0x003F,
        0xFECC,0x009D,0x003F,
        0xFECD,0x009E,0x003F,
        0xFECE,0x009F,0x003F,
        0xFECF,0x00A0,0x003F,
        0xFED0,0x00AA,0x003F,
        0xFED1,0x00AB,0x003F,
        0xFED2,0x00AB,0x003F,
        0xFED3,0x00AC,0x003F,
        0xFED4,0x00AC,0x003F,
        0xFED5,0x00AD,0x003F,
        0xFED6,0x00AD,0x003F,
        0xFED7,0x00AE,0x003F,
        0xFED8,0x00AE,0x003F,
        0xFED9,0x00AF,0x003F,
        0xFEDA,0x00AF,0x003F,
        0xFEDB,0x00B0,0x003F,
        0xFEDC,0x00B0,0x003F,
        0xFEDD,0x00B1,0x003F,
        0xFEDE,0x00B1,0x003F,
        0xFEDF,0x00BA,0x003F,
        0xFEE0,0x00BA,0x003F,
        0xFEE1,0x00BB,0x003F,
        0xFEE2,0x00BB,0x003F,
        0xFEE3,0x00BC,0x003F,
        0xFEE4,0x00BC,0x003F,
        0xFEE5,0x00BD,0x003F,
        0xFEE6,0x00BD,0x003F,
        0xFEE7,0x00BE,0x003F,
        0xFEE8,0x00BE,0x003F,
        0xFEE9,0x00BF,0x003F,
        0xFEEA,0x00BF,0x003F,
        0xFEEB,0x00CB,0x003F,
        0xFEEC,0x00CD,0x003F,
        0xFEED,0x00CF,0x003F,
        0xFEEE,0x00CF,0x003F,
        0xFEEF,0x00DA,0x003F,
        0xFEF0,0x00DB,0x003F,
        0xFEF1,0x00DC,0x003F,
        0xFEF2,0x00DD,0x003F,
        0xFEF3,0x00DE,0x003F,
        0xFEF4,0x00DE,0x003F,
        0xFEF5,0x00B2,0x003F,
        0xFEF6,0x00B3,0x003F,
        0xFEF7,0x00B4,0x003F,
        0xFEF8,0x00B5,0x003F,
        0xFEF9,0x00B8,0x003F,
        0xFEFA,0x00B9,0x003F,
        0xFEFB,0x00B8,0x003F,
        0xFEFC,0x00B9,0x003F,
        0xFF01,0x005A,0x003F,
        0xFF02,0x007F,0x003F,
        0xFF03,0x007B,0x003F,
        0xFF04,0x005B,0x003F,
        0xFF05,0x006C,0x003F,
        0xFF06,0x0050,0x003F,
        0xFF07,0x007D,0x003F,
        0xFF08,0x004D,0x00A1,
        0xFF09,0x005D,0x003F,
        0xFF0A,0x005C,0x003F,
        0xFF0B,0x004E,0x003F,
        0xFF0C,0x006B,0x003F,
        0xFF0D,0x0060,0x003F,
        0xFF0E,0x004B,0x003F,
        0xFF0F,0x0061,0x003F,
        0xFF10,0x00F0,0x003F,
        0xFF11,0x00F1,0x003F,
        0xFF12,0x00F2,0x003F,
        0xFF13,0x00F3,0x003F,
        0xFF14,0x00F4,0x003F,
        0xFF15,0x00F5,0x003F,
        0xFF16,0x00F6,0x003F,
        0xFF17,0x00F7,0x003F,
        0xFF18,0x00F8,0x003F,
        0xFF19,0x00F9,0x003F,
        0xFF1A,0x007A,0x003F,
        0xFF1B,0x005E,0x003F,
        0xFF1C,0x004C,0x003F,
        0xFF1D,0x007E,0x003F,
        0xFF1E,0x006E,0x003F,
        0xFF1F,0x006F,0x003F,
        0xFF20,0x007C,0x003F,
        0xFF21,0x00C1,0x003F,
        0xFF22,0x00C2,0x003F,
        0xFF23,0x00C3,0x003F,
        0xFF24,0x00C4,0x003F,
        0xFF25,0x00C5,0x003F,
        0xFF26,0x00C6,0x003F,
        0xFF27,0x00C7,0x003F,
        0xFF28,0x00C8,0x00E0,
        0xFF29,0x00C9,0x003F,
        0xFF2A,0x00D1,0x003F,
        0xFF2B,0x00D2,0x003F,
        0xFF2C,0x00D3,0x003F,
        0xFF2D,0x00D4,0x003F,
        0xFF2E,0x00D5,0x003F,
        0xFF2F,0x00D6,0x003F,
        0xFF30,0x00D7,0x003F,
        0xFF31,0x00D8,0x003F,
        0xFF32,0x00D9,0x003F,
        0xFF33,0x00E2,0x003F,
        0xFF34,0x00E3,0x003F,
        0xFF35,0x00E4,0x003F,
        0xFF36,0x00E5,0x003F,
        0xFF37,0x00E6,0x003F,
        0xFF38,0x00E7,0x003F,
        0xFF39,0x00E8,0x003F,
        0xFF3A,0x00E9,0x003F,
        0xFF3F,0x006D,0x003F,
        0xFF41,0x0081,0x003F,
        0xFF42,0x0082,0x003F,
        0xFF43,0x0083,0x003F,
        0xFF44,0x0084,0x003F,
        0xFF45,0x0085,0x003F,
        0xFF46,0x0086,0x003F,
        0xFF47,0x0087,0x003F,
        0xFF48,0x0088,0x003F,
        0xFF49,0x0089,0x003F,
        0xFF4A,0x0091,0x003F,
        0xFF4B,0x0092,0x003F,
        0xFF4C,0x0093,0x003F,
        0xFF4D,0x0094,0x003F,
        0xFF4E,0x0095,0x003F,
        0xFF4F,0x0096,0x003F,
        0xFF50,0x0097,0x003F,
        0xFF51,0x0098,0x003F,
        0xFF52,0x0099,0x00CA,
        0xFF53,0x00A2,0x005F,
        0xFF54,0x00A3,0x003F,
        0xFF55,0x00A4,0x003F,
        0xFF56,0x00A5,0x003F,
        0xFF57,0x00A6,0x003F,
        0xFF58,0x00A7,0x003F,
        0xFF59,0x00A8,0x006A,
        0xFF5A,0x00A9,0x003F,
        0xFF5C,0x004F,0x003F,
        0xFF5D,0x003F,0x004A,
        0xFF5F,0x003F,0x0041,
        0xFF60,0x003F,0x00FF,
        0xFF61,0x003F,0x003E,
        0xFF62,0x003F,0x0014,
        0xFF63,0x003F,0x0004,
        0xFF64,0x003F,0x003B,
        0xFF65,0x003F,0x003A,
        0xFF66,0x003F,0x0039,
        0xFF67,0x003F,0x0038,
        0xFF68,0x003F,0x0008,
        0xFF69,0x003F,0x0036,
        0xFF6A,0x003F,0x0035,
        0xFF6B,0x003F,0x0034,
        0xFF6C,0x003F,0x0033,
        0xFF6D,0x003F,0x001A,
        0xFF6E,0x003F,0x0031,
        0xFF6F,0x003F,0x0030,
        0xFF70,0x003F,0x001B,
        0xFF71,0x003F,0x000A,
        0xFF72,0x003F,0x0009,
        0xFF73,0x003F,0x002C,
        0xFF74,0x003F,0x002B,
        0xFF75,0x003F,0x002A,
        0xFF76,0x003F,0x0029,
        0xFF77,0x003F,0x0028,
        0xFF78,0x003F,0x0017,
        0xFF79,0x003F,0x0006,
        0xFF7A,0x003F,0x0015,
        0xFF7B,0x003F,0x0024,
        0xFF7C,0x003F,0x0023,
        0xFF7D,0x003F,0x0022,
        0xFF7E,0x003F,0x0021,
        0xFF7F,0x003F,0x0020,
        0xFF80,0x003F,0x0007,
        0xFF83,0x003F,0x004F,
        0xFF85,0x003F,0x00A9,
        0xFF86,0x003F,0x00A8,
        0xFF87,0x003F,0x00A7,
        0xFF88,0x003F,0x00A6,
        0xFF89,0x003F,0x00A5,
        0xFF8A,0x003F,0x00A4,
        0xFF8B,0x003F,0x00A3,
        0xFF8C,0x003F,0x00A2,
        0xFF8D,0x003F,0x0099,
        0xFF8E,0x003F,0x0098,
        0xFF8F,0x003F,0x0097,
        0xFF90,0x003F,0x0096,
        0xFF91,0x003F,0x0095,
        0xFF92,0x003F,0x0094,
        0xFF93,0x003F,0x0093,
        0xFF94,0x003F,0x0092,
        0xFF95,0x003F,0x0091,
        0xFF96,0x003F,0x0089,
        0xFF97,0x003F,0x0088,
        0xFF98,0x003F,0x0087,
        0xFF99,0x003F,0x0086,
        0xFF9A,0x003F,0x0085,
        0xFF9B,0x003F,0x0084,
        0xFF9C,0x003F,0x0083,
        0xFF9D,0x003F,0x0082,
        0xFF9E,0x003F,0x0081,
        0xFFA0,0x003F,0x006D,
        0xFFA5,0x003F,0x00E9,
        0xFFA6,0x003F,0x00E8,
        0xFFA7,0x003F,0x00E7,
        0xFFA8,0x003F,0x00E6,
        0xFFA9,0x003F,0x00E5,
        0xFFAA,0x003F,0x00E4,
        0xFFAB,0x003F,0x00E3,
        0xFFAC,0x003F,0x00E2,
        0xFFAD,0x003F,0x00D9,
        0xFFAE,0x003F,0x00D8,
        0xFFAF,0x003F,0x00D7,
        0xFFB0,0x003F,0x00D6,
        0xFFB1,0x003F,0x00D5,
        0xFFB2,0x003F,0x00D4,
        0xFFB3,0x003F,0x00D3,
        0xFFB4,0x003F,0x00D2,
        0xFFB5,0x003F,0x00D1,
        0xFFB6,0x003F,0x00C9,
        0xFFB7,0x003F,0x00C8,
        0xFFB8,0x003F,0x00C7,
        0xFFB9,0x003F,0x00C6,
        0xFFBA,0x003F,0x00C5,
        0xFFBB,0x003F,0x00C4,
        0xFFBC,0x003F,0x00C3,
        0xFFBD,0x003F,0x00C2,
        0xFFBE,0x003F,0x00C1,
        0xFFBF,0x003F,0x007C,
        0xFFC0,0x003F,0x006F,
        0xFFC1,0x003F,0x006E,
        0xFFC2,0x003F,0x007E,
        0xFFC3,0x003F,0x004C,
        0xFFC4,0x003F,0x005E,
        0xFFC5,0x003F,0x007A,
        0xFFC6,0x003F,0x00F9,
        0xFFC7,0x003F,0x00F8,
        0xFFC8,0x003F,0x00F7,
        0xFFC9,0x003F,0x00F6,
        0xFFCA,0x003F,0x00F5,
        0xFFCB,0x003F,0x00F4,
        0xFFCC,0x003F,0x00F3,
        0xFFCD,0x003F,0x00F2,
        0xFFCE,0x003F,0x00F1,
        0xFFCF,0x003F,0x00F0,
        0xFFD0,0x003F,0x0061,
        0xFFD1,0x003F,0x004B,
        0xFFD2,0x003F,0x0060,
        0xFFD3,0x003F,0x006B,
        0xFFD4,0x003F,0x004E,
        0xFFD5,0x003F,0x005C,
        0xFFD6,0x003F,0x005D,
        0xFFD7,0x003F,0x004D,
        0xFFD8,0x003F,0x007D,
        0xFFD9,0x003F,0x0050,
        0xFFDA,0x003F,0x006C,
        0xFFDB,0x003F,0x005B,
        0xFFDC,0x003F,0x007B,
        0xFFDD,0x003F,0x007F,
        0xFFDE,0x003F,0x005A,
        0xFFDF,0x003F,0x0040,
        0xFFE0,0x003F,0x001F,
        0xFFE1,0x003F,0x001E,
        0xFFE2,0x003F,0x001D,
        0xFFE3,0x003F,0x001C,
        0xFFE4,0x003F,0x0027,
        0xFFE6,0x003F,0x0019,
        0xFFE7,0x003F,0x0018,
        0xFFE8,0x003F,0x0026,
        0xFFE9,0x003F,0x0032,
        0xFFEA,0x003F,0x003D,
        0xFFEB,0x003F,0x003C,
        0xFFEC,0x003F,0x0013,
        0xFFED,0x003F,0x0012,
        0xFFEE,0x003F,0x0011,
        0xFFEF,0x003F,0x0010,
        0xFFF0,0x003F,0x000F,
        0xFFF1,0x003F,0x000E,
        0xFFF2,0x003F,0x000D,
        0xFFF3,0x003F,0x000C,
        0xFFF4,0x003F,0x000B,
        0xFFF5,0x003F,0x0025,
        0xFFF6,0x003F,0x0005,
        0xFFF7,0x003F,0x0016,
        0xFFF8,0x003F,0x002F,
        0xFFF9,0x003F,0x002E,
        0xFFFA,0x003F,0x002D,
        0xFFFB,0x003F,0x0037,
        0xFFFC,0x003F,0x0003,
        0xFFFD,0x003F,0x0002,
        0xFFFE,0x003F,0x0001,
        0xFFFF,0x003F,0x0000
    };

    char[] known8612MissesEtoU =
    {
        0x0043,0xFE7D,0x001A,
        0x0045,0x200B,0x001A,
        0x0048,0xFE82,0x001A,
        0x0051,0xFE84,0x001A,
        0x0057,0xFE8E,0x001A,
        0x0059,0xFE91,0x001A,
        0x0064,0xFE97,0x001A,
        0x0066,0xFE9B,0x001A,
        0x0068,0xFE9F,0x001A,
        0x0070,0xFEA3,0x001A,
        0x0072,0xFEA7,0x001A,
        0x0078,0xFEB3,0x001A,
        0x008A,0xFEB7,0x001A,
        0x008C,0xFEBB,0x001A,
        0x008E,0xFEBF,0x001A,
        0x009B,0xFECA,0x001A,
        0x009C,0xFECB,0x001A,
        0x009D,0xFECC,0x001A,
        0x009F,0xFECE,0x001A,
        0x00A0,0xFECF,0x001A,
        0x00AA,0xFED0,0x001A,
        0x00AC,0xFED3,0x001A,
        0x00AE,0xFED7,0x001A,
        0x00B0,0xFEDB,0x001A,
        0x00B2,0xFEF5,0x001A,
        0x00B3,0xFEF6,0x001A,
        0x00B4,0xFEF7,0x001A,
        0x00B5,0xFEF8,0x001A,
        0x00B8,0xFEFB,0x001A,
        0x00B9,0xFEFC,0x001A,
        0x00BA,0xFEDF,0x001A,
        0x00BC,0xFEE3,0x001A,
        0x00BE,0xFEE7,0x001A,
        0x00CB,0xFEEB,0x001A,
        0x00CD,0xFEEC,0x001A,
        0x00DB,0xFEF0,0x001A,
        0x00DD,0xFEF2,0x001A,
        0x00DE,0xFEF3,0x001A,
        0x00DF,0x0660,0x001A,
        0x00E1,0x2007,0x001A,
        0x00EA,0x0661,0x001A,
        0x00EB,0x0662,0x001A,
        0x00ED,0x0663,0x001A,
        0x00EE,0x0664,0x001A,
        0x00EF,0x0665,0x001A,
        0x00FB,0x0666,0x001A,
        0x00FC,0x0667,0x001A,
        0x00FD,0x0668,0x001A,
        0x00FE,0x0669,0x001A
    };

    char[] known8612MissesUtoE =
    {
        0x0660,0x00DF,0x00F0,
        0x0661,0x00EA,0x00F1,
        0x0662,0x00EB,0x00F2,
        0x0663,0x00ED,0x00F3,
        0x0664,0x00EE,0x00F4,
        0x0665,0x00EF,0x00F5,
        0x0666,0x00FB,0x00F6,
        0x0667,0x00FC,0x00F7,
        0x0668,0x00FD,0x00F8,
        0x0669,0x00FE,0x00F9,
        0x2007,0x00E1,0x003F,
        0x200B,0x0045,0x0040,
        0xFE73,0x0045,0x003F,
        0xFE7D,0x0043,0x0042,
        0xFE82,0x0048,0x0047,
        0xFE84,0x0051,0x0049,
        0xFE88,0x0057,0x0056,
        0xFE8E,0x0057,0x0056,
        0xFE91,0x0059,0x0058,
        0xFE92,0x0059,0x0058,
        0xFE97,0x0064,0x0063,
        0xFE98,0x0064,0x0063,
        0xFE9B,0x0066,0x0065,
        0xFE9C,0x0066,0x0065,
        0xFE9F,0x0068,0x0067,
        0xFEA0,0x0068,0x0067,
        0xFEA3,0x0070,0x0069,
        0xFEA4,0x0070,0x0069,
        0xFEA7,0x0072,0x0071,
        0xFEA8,0x0072,0x0071,
        0xFEB3,0x0078,0x0077,
        0xFEB4,0x0078,0x0077,
        0xFEB7,0x008A,0x0080,
        0xFEB8,0x008A,0x0080,
        0xFEBB,0x008C,0x008B,
        0xFEBC,0x008C,0x008B,
        0xFEBF,0x008E,0x008D,
        0xFEC0,0x008E,0x008D,
        0xFECA,0x009B,0x009A,
        0xFECB,0x009C,0x009A,
        0xFECC,0x009D,0x009A,
        0xFECE,0x009F,0x009E,
        0xFECF,0x00A0,0x009E,
        0xFED0,0x00AA,0x009E,
        0xFED3,0x00AC,0x00AB,
        0xFED4,0x00AC,0x00AB,
        0xFED7,0x00AE,0x00AD,
        0xFED8,0x00AE,0x00AD,
        0xFEDB,0x00B0,0x00AF,
        0xFEDC,0x00B0,0x00AF,
        0xFEDF,0x00BA,0x00B1,
        0xFEE0,0x00BA,0x00B1,
        0xFEE3,0x00BC,0x00BB,
        0xFEE4,0x00BC,0x00BB,
        0xFEE7,0x00BE,0x00BD,
        0xFEE8,0x00BE,0x00BD,
        0xFEEB,0x00CB,0x00BF,
        0xFEEC,0x00CD,0x00BF,
        0xFEF0,0x00DB,0x00DA,
        0xFEF2,0x00DD,0x00DC,
        0xFEF3,0x00DE,0x00DC,
        0xFEF4,0x00DE,0x00DC,
        0xFEF5,0x00B2,0x003F,
        0xFEF6,0x00B3,0x003F,
        0xFEF7,0x00B4,0x003F,
        0xFEF8,0x00B5,0x003F,
        0xFEF9,0x00B8,0x003F,
        0xFEFA,0x00B9,0x003F,
        0xFEFB,0x00B8,0x003F,
        0xFEFC,0x00B9,0x003F
    };

    /**
     Helper method used to compare the established and generated converter tables.
     **/
    public void compareTables(ConvTableBidiMap c) throws Exception
    {
        int ccsid = c.getCcsid();
        // First test the toUnicode table
        char[] established = c.toUnicode_;
        char[] generated = downloadBidiByteToUnicodeTable(ccsid);
        if (established.length != generated.length)
        {
            failed("EBCDIC->Unicode table length does not match OS/400's for ccsid " + ccsid + ": " + established.length + " != " + generated.length);
            return;
        }

        String failMsg = "";
        String notApplMsg = "";

        StringBuffer charFailures = new StringBuffer();
        StringBuffer knownCharFailures = new StringBuffer();
        boolean unknownCharFailuresWereEncountered = false;
        int knownFailurePosition = 0;
        for (int i = 0; i < established.length; ++i)
        {
            int est = (int)(established[i] & 0xFFFF);
            int gen = (int)(generated[i] & 0xFFFF);
            if (est != gen)
            {
                if ((ccsid == 420 || ccsid == 12708) && i == 0x00E1 && est == 0x2007 && gen == 0x001A)
                {
                    knownCharFailures.append("\n" + hex(i) + ":{'" + hex(est) + "','" + hex(gen) + "'}");
                }
                else if (ccsid == 862 && i == known862MissesEtoU[knownFailurePosition] && est == known862MissesEtoU[knownFailurePosition + 1] && gen == known862MissesEtoU[knownFailurePosition + 2])
                {
                    knownFailurePosition += 3;
                    knownCharFailures.append("\n" + hex(i) + ":{'" + hex(est) + "','" + hex(gen) + "'}");
                }
                else if ((ccsid == 8612 || ccsid == 62224) && i == known8612MissesEtoU[knownFailurePosition] && est == known8612MissesEtoU[knownFailurePosition + 1] && gen == known8612MissesEtoU[knownFailurePosition + 2])
                {
                    knownFailurePosition += 3;
                    knownCharFailures.append("\n" + hex(i) + ":{'" + hex(est) + "','" + hex(gen) + "'}");
                }
                else
                {
                    if ((ccsid == 420 ||
                         ccsid == 424 ||
                         ccsid == 862 ||
                         ccsid == 12708)) {
                      // TODO: Ignore failures for those CCSIDs until we re-work this testcase.
                    }
                    else {
                      unknownCharFailuresWereEncountered = true;
                    }
                    charFailures.append("\n" + hex(i)+":{'"+hex(est)+"','"+hex(gen)+"'}");
                }
            }
        }
        if (knownCharFailures.length() > 0)
        {
            notApplMsg += "\nEBCDIC->Unicode known " + ccsid + " table mismatch.";
        }
        if (charFailures.length() > 0)
        {
            failMsg += notApplMsg + knownCharFailures.toString() + "\nEBCDIC->Unicode table characters do not match OS/400's for ccsid " + ccsid + ":" + charFailures.toString();
        }

        // Now test the fromUnicode table.
        byte[] established_b = c.fromUnicode_;
        generated = downloadBidiByteFromUnicodeTable(ccsid);
        byte[] generated_b = new byte[generated.length * 2]; // The chars are doubled-up bytes.
        for (int i = 0; i < generated.length; ++i)
        {
            int ch = (int)(generated[i] & 0xFFFF);
            generated_b[i * 2] = (byte)(ch >>> 8);
            generated_b[i * 2 + 1] = (byte)(ch & 0x00FF);
        }
        if (established_b.length != generated_b.length)
        {
            failed("Unicode->EBCDIC table length does not match OS/400's for ccsid " + ccsid + ": " + established_b.length + " != " + generated_b.length);
            return;
        }
        charFailures = new StringBuffer();
        knownCharFailures = new StringBuffer();
        knownFailurePosition = 0;
        for (int i=0; i<established_b.length; ++i)
        {
            int est = (int)(established_b[i] & 0x00FF);
            int gen = (int)(generated_b[i] & 0x00FF);
	    /* Only test for non surrogate range */
	    if ((i < 0xD800 || i > 0xDFFF)  && (est != gen))
            {
                if (ccsid == 420 && i == known420Misses[knownFailurePosition] && est == known420Misses[knownFailurePosition + 1] && gen == known420Misses[knownFailurePosition + 2])
                {
                    knownFailurePosition += 3;
                    knownCharFailures.append("\n" + hex(i) + ":{'" + hex(est) + "','" + hex(gen) + "'}");
                }
                else if (ccsid == 424 && i == known424Misses[knownFailurePosition] && est == known424Misses[knownFailurePosition + 1] && gen == known424Misses[knownFailurePosition + 2])
                {
                    knownFailurePosition += 3;
                    knownCharFailures.append("\n" + hex(i) + ":{'" + hex(est) + "','" + hex(gen) + "'}");
                }
                else if (ccsid == 12708 && i == known12708Misses[knownFailurePosition] && est == known12708Misses[knownFailurePosition + 1] && gen == known12708Misses[knownFailurePosition + 2])
                {
                    knownFailurePosition += 3;
                    knownCharFailures.append("\n" + hex(i) + ":{'" + hex(est) + "','" + hex(gen)+"'}");
                }
                else if (ccsid == 862 && i == known862MissesUtoE[knownFailurePosition] && est == known862MissesUtoE[knownFailurePosition + 1] && gen == known862MissesUtoE[knownFailurePosition + 2])
                {
                    knownFailurePosition += 3;
                    knownCharFailures.append("\n" + hex(i) + ":{'" + hex(est)+"','" + hex(gen)+"'}");
                }
                else if ((ccsid == 8612 || ccsid == 62224) && i == known8612MissesUtoE[knownFailurePosition] && est == known8612MissesUtoE[knownFailurePosition + 1] && gen == known8612MissesUtoE[knownFailurePosition + 2])
                {
                    knownFailurePosition += 3;
                    knownCharFailures.append("\n" + hex(i) + ":{'" + hex(est) + "','" + hex(gen) + "'}");
                }
                else
                {
                    if ((ccsid == 420 ||
                         ccsid == 424 ||
                         ccsid == 862 ||
                         ccsid == 12708)) {
                      // TODO: Ignore failures for those CCSIDs until we re-work this testcase.
                    }
                    else {
                      unknownCharFailuresWereEncountered = true;
                    }
                    charFailures.append("\n" + hex(i)+":{'"+hex(est)+"','"+hex(gen)+"'}");
                }
            }
        }
        if (knownCharFailures.length() > 0)
        {
            notApplMsg += "\nUnicode->EBCDIC known " + ccsid + " table mismatch.";
        }
        if (charFailures.length() > 0)
        {
            failMsg += notApplMsg + knownCharFailures.toString() + "\nUnicode->EBCDIC table characters do not match OS/400's for ccsid " + ccsid + ":" + charFailures.toString();
        }
        //if (!failMsg.equals("")) failed(failMsg);
        if (unknownCharFailuresWereEncountered) failed(failMsg);
        else if (!notApplMsg.equals("")) notApplicable(notApplMsg);
        else succeeded();
    }
}
